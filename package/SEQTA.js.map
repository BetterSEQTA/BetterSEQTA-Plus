{"version":3,"file":"SEQTA.js","mappings":";;;;;AAAA;;;;ACMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmMA;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AAEA;;;;ADiuEA;;;AAOA;AA2PA;ACliFA;AACA","sources":["webpack://betterseqtaplus/./src/seqta/icons/coursesIcon.js","webpack://betterseqtaplus/./src/seqta/ui/Animation.js","webpack://betterseqtaplus/./src/SEQTA.js","webpack://betterseqtaplus/./src/seqta/ui/Loading.js"],"sourcesContent":["export default String.raw`\n<svg style=\"width:24px;height:24px;border-radius:0;\" viewBox=\"0 0 24 24\">\n  <path fill=\"currentColor\" d=\"M19 1L14 6V17L19 12.5V1M21 5V18.5C19.9 18.15 18.7 18 17.5 18C15.8 18 13.35 18.65 12 19.5V6C10.55 4.9 8.45 4.5 6.5 4.5C4.55 4.5 2.45 4.9 1 6V20.65C1 20.9 1.25 21.15 1.5 21.15C1.6 21.15 1.65 21.1 1.75 21.1C3.1 20.45 5.05 20 6.5 20C8.45 20 10.55 20.4 12 21.5C13.35 20.65 15.8 20 17.5 20C19.15 20 20.85 20.3 22.25 21.05C22.35 21.1 22.4 21.1 22.5 21.1C22.75 21.1 23 20.85 23 20.6V6C22.4 5.55 21.75 5.25 21 5M10 18.41C8.75 18.09 7.5 18 6.5 18C5.44 18 4.18 18.19 3 18.5V7.13C3.91 6.73 5.14 6.5 6.5 6.5C7.86 6.5 9.09 6.73 10 7.13V18.41Z\"></path>\n</svg>\n`;","/**\n * Update the background animation durations based on the slider input.\n * @param {Object} item - The object containing the bksliderinput property.\n * @param {number} [minDuration=1] - The minimum animation duration in seconds.\n * @param {number} [maxDuration=10] - The maximum animation duration in seconds.\n */\nexport function updateBgDurations(speed, minDuration = 0.5, maxDuration = 10) {\n  // Class names to look for\n  const bgClasses = ['bg', 'bg2', 'bg3'];\n  let reversedValue;\n\n  if (speed.bksliderinput === undefined) {\n    // Reverse the slider direction to align with the animation\n    reversedValue = 150 - speed;\n  } else {\n    reversedValue = 150 - speed.bksliderinput;\n  }\n  \n  // Range of possible animation durations\n  const durationRange = maxDuration - minDuration;\n  \n  // Function to calculate animation duration\n  const calcDuration = (baseValue, offset = 0) => minDuration + ((baseValue / 200) + offset) * durationRange;\n  \n  // Iterate through each class name to update its animation duration\n  bgClasses.forEach((className, index) => {\n    const elements = document.getElementsByClassName(className);\n\n    if (elements.length === 0) {\n      return;\n    }\n    \n    const offset = index * 0.05;\n    const duration = calcDuration(reversedValue, offset);\n    elements[0].style.animationDuration = `${duration}s`;\n  });\n}","/* global chrome */\nimport { animate, spring, stagger } from 'motion';\nimport Color from 'color';\n\nimport ShortcutLinks from './seqta/content/links.json';\nimport MenuitemSVGKey from './seqta/content/MenuItemSVGKey.json';\nimport stringToHTML from './seqta/utils/stringToHTML.js';\nimport loading, { AppendLoadingSymbol } from './seqta/ui/Loading.js';\n\n// Icons\nimport assessmentsicon from './seqta/icons/assessmentsIcon.js';\nimport coursesicon from './seqta/icons/coursesIcon.js';\nimport StorageListener from './seqta/utils/StorageListener.js';\nimport { MessageHandler } from './seqta/utils/MessageListener.js';\nimport { updateBgDurations } from './seqta/ui/Animation.js';\nimport { updateAllColors } from './seqta/ui/colors/Manager.js';\nimport { appendBackgroundToUI } from './seqta/ui/ImageBackgrounds.js';\nimport { enableCurrentTheme } from './seqta/ui/Themes.js';\n\nexport let isChrome = window.chrome;\nlet SettingsClicked = false;\nexport let MenuOptionsOpen = false;\nlet UserInitalCode = '';\nlet currentSelectedDate = new Date();\nlet LessonInterval;\nexport let DarkMode;\n\nvar MenuItemMutation = false;\nvar NonSEQTAPage = false;\nvar IsSEQTAPage = false;\n\ndocument.addEventListener(\n  'load',\n  function () {\n    CheckForMenuList();\n    if (\n      document.childNodes[1].textContent?.includes(\n        'Copyright (c) SEQTA Software',\n      ) &&\n      document.title.includes('SEQTA Learn') &&\n      !IsSEQTAPage\n    ) {\n      IsSEQTAPage = true;\n      console.log('[BetterSEQTA+] Verified SEQTA Page');\n\n      let link = document.createElement('link');\n      link.href = chrome.runtime.getURL('css/documentload.css');\n      link.type = 'text/css';\n      link.rel = 'stylesheet';\n      document.getElementsByTagName('html')[0].appendChild(link);\n\n      enableCurrentTheme();\n      chrome.storage.local.get(null, function (items) {\n        main(items);\n      });\n    }\n    if (\n      !document.childNodes[1].textContent?.includes('SEQTA') &&\n      !NonSEQTAPage\n    ) {\n      NonSEQTAPage = true;\n    }\n  },\n  true,\n);\n\nfunction delay(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nfunction SetDisplayNone(ElementName) {\n  return `li[data-key=${ElementName}]{display:var(--menuHidden) !important; transition: 1s;}`;\n}\n\nfunction animbkEnable(item) {\n  if (item.animatedbk) {\n    CreateBackground();\n  } else {\n    RemoveBackground();\n    document.getElementById('container').style.background = 'var(--background-secondary)';\n  }\n}\n\nexport function ApplyCSSToHiddenMenuItems() {\n  var stylesheetInnerText = '';\n  chrome.storage.local.get(null, function (result) {\n    for (let i = 0; i < Object.keys(result.menuitems).length; i++) {\n      if (!Object.values(result.menuitems)[i].toggle) {\n        stylesheetInnerText += SetDisplayNone(Object.keys(result.menuitems)[i]);\n        console.log(\n          `[BetterSEQTA+] Hiding ${\n            Object.keys(result.menuitems)[i]\n          } menu item`,\n        );\n      }\n    }\n    let MenuItemStyle = document.createElement('style');\n    MenuItemStyle.innerText = stylesheetInnerText;\n    document.head.appendChild(MenuItemStyle);\n  });\n}\n\nfunction OpenWhatsNewPopup() {\n  const background = document.createElement('div');\n  background.id = 'whatsnewbk';\n  background.classList.add('whatsnewBackground');\n\n  const container = document.createElement('div');\n  container.classList.add('whatsnewContainer');\n\n  var header = stringToHTML(`<div class=\"whatsnewHeader\">\n  <h1>What's New</h1>\n  <p>BetterSEQTA+ V${chrome.runtime.getManifest().version}</p>\n  </div>`).firstChild;\n\n  let imagecont = document.createElement('div');\n  imagecont.classList.add('whatsnewImgContainer');\n  let video = document.createElement('video');\n  let source = document.createElement('source');\n  source.setAttribute('src', chrome.runtime.getURL('resources/update-video.mp4'));\n  source.setAttribute('type', 'video/mp4');\n  video.autoplay = true;\n  video.muted = true;\n  video.loop = true;\n  video.appendChild(source);\n  video.classList.add('whatsnewImg');\n  imagecont.appendChild(video);\n\n  let textcontainer = document.createElement('div');\n  textcontainer.classList.add('whatsnewTextContainer');\n\n  let textheader = stringToHTML(\n    '<h1 class=\"whatsnewTextHeader\">DESIGN OVERHAUL</h1>',\n  ).firstChild;\n  textcontainer.append(textheader);\n\n  let text = stringToHTML(\n    String.raw`\n  <div class=\"whatsnewTextContainer\" style=\"height: 50%;overflow-y: scroll;\">    \n\n    <h1>3.2.0 - Custom Themes</h1>\n    <li>Added transparency (blur) effects</li>\n    <li>Added custom themes</li>\n    <li>Added colour picker history</li>\n    <li>Heaps of bug fixes</li>\n\n    <h1>3.1.3 - Custom Backgrounds</h1>\n    <li>Added custom backgrounds with support for images and videos</li>\n    <li>Overhauled topbar</li>\n    <li>New animated hamburger icon</li>\n    <li>Minor bug fixes</li>\n\n    <h1>3.1.2 - New settings menu!</h1>\n    <li>Overhauled the settings menu</li>\n    <li>Added custom gradients</li>\n    <li>Added HEAPS of animations</li>\n    <li>Fixed a bug where shortcuts don't show up</li>\n    <li>Other minor bugs fixed</li>\n    \n    <h1>3.1.1 - Minor Bug fixes</h1>\n    <li>Fixed assessments overlapping</li>\n    <li>Fixed houses not displaying if they aren't a specific color</li>\n    <li>Fixed Chrome Webstore Link</li>\n    \n    <h1>3.1.0 - Design Improvements</h1>\n    <li>Minor UI improvements</li>\n    <li>Added Animation Speed Slider</li>\n    <li>Animation now enables and disables without reloading SEQTA</li>\n    <li>Changed logo</li>\n\n    <h1>3.0.0 - BetterSEQTA+ *Complete Overhaul*</h1>\n    <li>Redesigned appearance</li>\n    <li>Upgraded to manifest V3 (longer support)</li>\n    <li>Fixed transitional glitches</li>\n    <li>Under the hood improvements</li>\n    <li>Fixed News Feed</li>\n\n    <h1>2.0.7 - Added support to other domains + Minor bug fixes</h1>\n    <li>Fixed BetterSEQTA+ not loading on some pages</li>\n    <li>Fixed text colour of notices being unreadable</li>\n    <li>Fixed pages not reloading when saving changes</li>\n    \n    <h1>2.0.2 - Minor bug fixes</h1>\n    <li>Fixed indicator for current lesson</li>\n    <li>Fixed text colour for DM messages list in Light mode</li>\n    <li>Fixed user info text colour</li>\n\n    <h1>Sleek New Layout</h1>\n    <li>Updated with a new font and presentation, BetterSEQTA+ has never looked better.</li>\n    \n    <h1>New Updated Sidebar</h1>\n    <li>Condensed appearance with new updated icons.</li>\n    \n    <h1>Independent Light Mode and Dark Mode</h1>\n    <li>Dark mode and Light mode are now available to pick alongside your chosen Theme Colour. Your Theme Colour will now become an accent colour for the page.\n    Light/Dark mode can be toggled with the new button, found in the top-right of the menu bar.</li>\n\n    <h1>Create Custom Shortcuts</h1>\n    <li>Found in the BetterSEQTA+ Settings menu, custom shortcuts can now be created with a name and URL of your choice.</li>\n  </div>\n  `,\n  ).firstChild;\n\n  let footer = stringToHTML(\n    String.raw`\n    <div class=\"whatsnewFooter\">\n      <div>\n      Report bugs and feedback: \n        <a href=\"https://github.com/SethBurkart123/EvenBetterSEQTA\" target=\"_blank\" style=\"background: none !important; margin: 0 5px; padding:0;\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25px\" height=\"25px\" viewBox=\"0 0 256 250\" version=\"1.1\" preserveAspectRatio=\"xMidYMid\">\n            <g><path d=\"M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z\" fill=\"currentColor\" /></g>\n          </svg>\n        </a>\n        <a href=\"https://chrome.google.com/webstore/detail/betterseqta%2B/afdgaoaclhkhemfkkkonemoapeinchel\" target=\"_blank\" style=\"background: none !important; margin: 0 5px; padding:0;\">\n          <svg style=\"width:25px;height:25px\" viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M12,20L15.46,14H15.45C15.79,13.4 16,12.73 16,12C16,10.8 15.46,9.73 14.62,9H19.41C19.79,9.93 20,10.94 20,12A8,8 0 0,1 12,20M4,12C4,10.54 4.39,9.18 5.07,8L8.54,14H8.55C9.24,15.19 10.5,16 12,16C12.45,16 12.88,15.91 13.29,15.77L10.89,19.91C7,19.37 4,16.04 4,12M15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9A3,3 0 0,1 15,12M12,4C14.96,4 17.54,5.61 18.92,8H12C10.06,8 8.45,9.38 8.08,11.21L5.7,7.08C7.16,5.21 9.44,4 12,4M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\" />\n          </svg>\n        </a>\n      </div>\n    </div>\n  `).firstChild;\n\n  let exitbutton = document.createElement('div');\n  exitbutton.id = 'whatsnewclosebutton';\n\n  container.append(header);\n  container.append(imagecont);\n  container.append(textcontainer);\n  container.append(text);\n  container.append(footer);\n  container.append(exitbutton);\n\n  background.append(container);\n\n  document.getElementById('container').append(background);\n\n  let bkelement = document.getElementById('whatsnewbk');\n  let popup = document.getElementsByClassName('whatsnewContainer')[0];\n\n  animate(\n    [popup, bkelement],\n    { scale: [0, 1], opacity: [0, 1] },\n    { easing: spring({ stiffness: 220, damping: 18 }) }\n  );\n\n  animate(\n    '.whatsnewTextContainer *',\n    { opacity: [0, 1], y: [10, 0] },\n    {\n      delay: stagger(0.05, { start: 0.1 }),\n      duration: 0.5,\n      easing: [.22, .03, .26, 1]  \n    }\n  );\n\n  chrome.storage.local.remove(['justupdated']);\n\n  bkelement.addEventListener('click', function (event) {\n    // Check if the click event originated from the element itself and not any of its children\n    if (event.target === bkelement) {\n      DeleteWhatsNew();\n    }\n  });  \n\n  var closeelement = document.getElementById('whatsnewclosebutton');\n  closeelement.addEventListener('click', function () {\n    DeleteWhatsNew();\n  });\n}\n\nasync function finishLoad() {\n  try {\n    var loadingbk = document.getElementById('loading');\n    loadingbk.style.opacity = '0';\n    await delay(501);\n    loadingbk.remove();\n  } catch (err) {\n    console.log(err);\n  }\n\n  chrome.storage.local.get(['justupdated'], function (result) {\n    if (result.justupdated) {\n      OpenWhatsNewPopup();\n    }\n  });\n}\n\nasync function DeleteWhatsNew() {\n  const bkelement = document.getElementById('whatsnewbk');\n  const popup = document.getElementsByClassName('whatsnewContainer')[0];\n  \n  animate(\n    [popup, bkelement],\n    { opacity: [1, 0], scale: [1, 0] },\n    { easing: [.22, .03, .26, 1] }\n  ).finished.then(() => {\n    bkelement.remove();\n  });\n}\n\nexport function CreateBackground() {\n  // Creating and inserting 3 divs containing the background applied to the pages\n  var bklocation = document.getElementById('container');\n  var menu = document.getElementById('menu');\n  var bk = document.createElement('div');\n  bk.classList.add('bg');\n\n  bklocation.insertBefore(bk, menu);\n\n  var bk2 = document.createElement('div');\n  bk2.classList.add('bg');\n  bk2.classList.add('bg2');\n  bklocation.insertBefore(bk2, menu);\n\n  var bk3 = document.createElement('div');\n  bk3.classList.add('bg');\n  bk3.classList.add('bg3');\n  bklocation.insertBefore(bk3, menu);\n}\n\nexport function RemoveBackground() {\n  var bk = document.getElementsByClassName('bg');\n  var bk2 = document.getElementsByClassName('bg2');\n  var bk3 = document.getElementsByClassName('bg3');\n\n  if (bk.length == 0 || bk2.length == 0 || bk3.length == 0) return;\n\n  bk[0].remove();\n  bk2[0].remove();\n  bk3[0].remove();\n}\n\nexport function waitForElm(selector) {\n  return new Promise((resolve) => {\n    if (document.querySelector(selector)) {\n      return resolve(document.querySelector(selector));\n    }\n\n    const observer = new MutationObserver(() => {\n      if (document.querySelector(selector)) {\n        resolve(document.querySelector(selector));\n        observer.disconnect();\n      }\n    });\n\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true,\n    });\n  });\n}\n\nasync function RunColourCheck(element) {\n  if (\n    typeof element.contentDocument.documentElement.childNodes[1] == 'undefined'\n  ) {\n    await delay(1000);\n    RunColourCheck(element);\n  } else {\n    element.contentDocument.documentElement.childNodes[1].style.color = 'white';\n  }\n}\n\nexport function GetiFrameCSSElement() {\n  var cssFile = chrome.runtime.getURL('css/iframe.css');\n  var fileref = document.createElement('link');\n  fileref.setAttribute('rel', 'stylesheet');\n  fileref.setAttribute('type', 'text/css');\n  fileref.setAttribute('href', cssFile);\n\n  return fileref;\n}\n\nfunction CheckiFrameItems() {\n  // Injecting CSS File to the webpage to overwrite iFrame default CSS\n  let fileref = GetiFrameCSSElement();\n\n  const observer = new MutationObserver(function (mutations_list) {\n    mutations_list.forEach(function (mutation) {\n      mutation.addedNodes.forEach(function (added_node) {\n        if (added_node.tagName == 'IFRAME') {\n          chrome.storage.local.get(['DarkMode'], function (result) {\n            DarkMode = result.DarkMode;\n            if (DarkMode) {\n              RunColourCheck(added_node);\n              if (\n                added_node.contentDocument.documentElement.childNodes[1].style\n                  .color != 'white'\n              ) {\n                added_node.contentDocument.documentElement.childNodes[1].style.color =\n                  'white';\n              }\n              if (\n                !added_node.contentDocument.documentElement.firstChild.innerHTML.includes(\n                  'iframe.css',\n                )\n              ) {\n                added_node.contentDocument.documentElement.firstChild.appendChild(\n                  fileref,\n                );\n              }\n              added_node.addEventListener('load', function () {\n                if (\n                  added_node.contentDocument.documentElement.childNodes[1].style\n                    .color != 'white'\n                ) {\n                  added_node.contentDocument.documentElement.childNodes[1].style.color =\n                    'white';\n                }\n                if (\n                  !added_node.contentDocument.documentElement.firstChild.innerHTML.includes(\n                    'iframe.css',\n                  )\n                ) {\n                  added_node.contentDocument.documentElement.firstChild.appendChild(\n                    fileref,\n                  );\n                }\n              });\n            }\n          });\n        }\n      });\n    });\n  });\n\n  observer.observe(document.body, {\n    subtree: true,\n    childList: true,\n  });\n}\n\nfunction SortMessagePageItems(messagesParentElement) {\n  let filterbutton = document.createElement('div');\n  filterbutton.classList.add('messages-filterbutton');\n  filterbutton.innerText = 'Filter';\n\n  let header = document.getElementsByClassName(\n    'MessageList__MessageList___3DxoC',\n  )[0].firstChild;\n  header.append(filterbutton);\n\n  const observer = new MutationObserver(function (mutations_list) {\n    mutations_list.forEach(function (mutation) {\n      mutation.addedNodes.forEach(function (added_node) {\n        if (added_node.dataset.message) {\n          // Check if added_node.firstChild.title is in block list\n        }\n      });\n    });\n  });\n\n  observer.observe(messagesParentElement, {\n    subtree: true,\n    childList: true,\n  });\n}\n\nasync function LoadPageElements() {\n  await AddBetterSEQTAElements(true);\n  var sublink = window.location.href.split('/')[4];\n  switch (sublink) {\n  case 'news':\n    console.log('[BetterSEQTA+] Started Init');\n    chrome.storage.local.get(null, function (result) {\n      if (result.onoff) {\n        SendNewsPage();\n\n        // Sends similar HTTP Post Request for the notices\n        chrome.storage.local.get(null, function (result) {\n          if (result.notificationcollector) {\n            enableNotificationCollector();\n          }\n        });\n        finishLoad();\n      }\n    });\n    break;\n\n  case 'home':\n    window.location.replace(`${location.origin}/#?page=/home`);\n    LoadInit();\n    break;\n  case undefined:\n    window.location.replace(`${location.origin}/#?page=/home`);\n    LoadInit();\n    break;\n  default:\n    finishLoad();\n\n    // Sends similar HTTP Post Request for the notices\n    chrome.storage.local.get(null, function (result) {\n      if (result.notificationcollector) {\n        enableNotificationCollector();\n      }\n    });\n    break;\n  }\n\n  const observer = new MutationObserver(function (mutations_list) {\n    mutations_list.forEach(function (mutation) {\n      mutation.addedNodes.forEach(function (added_node) {\n        if (added_node.classList.contains('messages')) {\n          let element = document.getElementById('title').firstChild;\n          element.innerText = 'Direct Messages';\n          document.title = 'Direct Messages ― SEQTA Learn';\n          SortMessagePageItems(added_node);\n\n          waitForElm('[data-message]').then(() => {\n            animate(\n              '[data-message]',\n              { opacity: [0, 1], y: [10, 0] },\n              {\n                delay: stagger(0.05),\n                duration: 0.5,\n                easing: [.22, .03, .26, 1]  \n              }\n            );\n          });\n        } else if (added_node.classList.contains('notices')) {\n          CheckNoticeTextColour(added_node);\n        } else if (added_node.classList.contains('dashboard')) {\n          let ranOnce = false;\n          waitForElm('.dashlet').then(() => {\n            if (ranOnce) return;\n            ranOnce = true;\n            animate(\n              '.dashboard *:not(.dashlet-timetable), .dashboard .message *',\n              { opacity: [0, 1], y: [10, 0] },\n              {\n                delay: stagger(0.01),\n                duration: 0.5,\n                easing: [.22, .03, .26, 1]  \n              }\n            );\n          });\n        } else if (added_node.classList.contains('documents')) {\n          let ranOnce = false;\n          waitForElm('.document').then(() => {\n            if (ranOnce) return;\n            ranOnce = true;\n            animate(\n              '.documents tbody tr.document',\n              { opacity: [0, 1], y: [10, 0] },\n              {\n                delay: stagger(0.05),\n                duration: 0.5,\n                easing: [.22, .03, .26, 1]  \n              }\n            );\n          });\n        } else if (added_node.classList.contains('reports')) {\n          let ranOnce = false;\n          waitForElm('.report').then(() => {\n            if (ranOnce) return;\n            ranOnce = true;\n            animate(\n              '.reports .item',\n              { opacity: [0, 1], y: [10, 0] },\n              {\n                delay: stagger(0.05, { start: 0.2 }),\n                duration: 0.5,\n                easing: [.22, .03, .26, 1]  \n              }\n            );\n          });\n        }\n      });\n    });\n  });\n\n  observer.observe(document.querySelector('#main'), {\n    subtree: false,\n    childList: true,\n  });\n}\n\nfunction CheckNoticeTextColour(notice) {\n  const observer = new MutationObserver(function (mutations_list) {\n    mutations_list.forEach(function (mutation) {\n      mutation.addedNodes.forEach(function (added_node) {\n        chrome.storage.local.get(['DarkMode'], function (result) {\n          DarkMode = result.DarkMode;\n          if (added_node.classList.contains('notice')) {\n            var hex = added_node.style.cssText.split(' ')[1];\n            var threshold = GetThresholdOfColor(hex);\n            if (DarkMode && threshold < 100) {\n              added_node.style.cssText = '--color: undefined;';\n            }\n          }\n        });\n      });\n    });\n  });\n\n  observer.observe(notice, {\n    subtree: true,\n    childList: true,\n  });\n}\n\nexport function tryLoad() {\n  waitForElm('.login').then(() => {\n    finishLoad();\n  });\n\n  waitForElm('.day-container').then(() => {\n    finishLoad();\n  });\n\n  waitForElm('[data-key=welcome]').then((elm) => {\n    elm.classList.remove('active');\n  });\n\n  waitForElm('.code').then((elm) => {\n    if (!elm.innerText.includes('BetterSEQTA')) LoadPageElements();\n  });\n\n  // Waits for page to call on load, run scripts\n  document.addEventListener(\n    'load',\n    function () {\n      CheckiFrameItems();\n    },\n    true,\n  );\n}\n\nfunction ChangeMenuItemPositions(storage) {\n  let menuorder = storage;\n\n  var menuList = document.querySelector('#menu').firstChild.childNodes;\n\n  let listorder = [];\n  for (let i = 0; i < menuList.length; i++) {\n\n    let a = menuorder.indexOf(menuList[i].dataset.key);\n\n    listorder.push(a);\n  }\n\n  var newArr = [];\n  for (var i = 0; i < listorder.length; i++) {\n    newArr[listorder[i]] = menuList[i];\n  }\n\n  let listItemsDOM = document.getElementById('menu').firstChild;\n  for (let i = 0; i < newArr.length; i++) {\n    const element = newArr[i];\n    if (element) {\n      element.setAttribute('data-checked', 'true');\n      listItemsDOM.appendChild(element);\n    }\n  }\n}\n\nexport async function ObserveMenuItemPosition() {\n  chrome.storage.local.get(null, function (result) {\n    let menuorder = result.menuorder;\n    if (menuorder && result.onoff) {\n      const observer = new MutationObserver(function (mutations_list) {\n        mutations_list.forEach(function (mutation) {\n          mutation.addedNodes.forEach(function (added_node) {\n            if (!added_node?.dataset?.checked && !MenuOptionsOpen) {\n              if (MenuitemSVGKey[added_node?.dataset?.key]) {\n                ReplaceMenuSVG(\n                  added_node,\n                  MenuitemSVGKey[added_node.dataset.key],\n                );\n              }\n              ChangeMenuItemPositions(menuorder);\n            }\n          });\n        });\n      });\n\n      observer.observe(document.querySelector('#menu').firstChild, {\n        subtree: true,\n        childList: true,\n      });\n    }\n  });\n}\n\nfunction main(storedSetting) {\n  const onoff = storedSetting.onoff;\n  DarkMode = storedSetting.DarkMode;\n\n  // Handle undefined onoff setting\n  if (typeof onoff === 'undefined') {\n    chrome.runtime.sendMessage({ type: 'setDefaultStorage' });\n  }\n\n  const initialize = () => {\n    InjectStyles();\n    InjectCustomIcons();\n    updateAllColors(storedSetting);\n    ApplyCSSToHiddenMenuItems();\n    loading();\n    CheckLoadOnPeriods();\n  };\n\n  const handleDisabled = () => {\n    waitForElm('.code').then(AppendElementsToDisabledPage);\n  };\n\n  if (onoff) {\n    console.log('[BetterSEQTA+] Enabled');\n    initialize();\n\n    if (!isChrome || isChrome === 'undefined') {\n      tryLoad();\n    }\n\n    window.addEventListener('load', tryLoad);\n  } else {\n    if (!isChrome || isChrome === 'undefined') {\n      handleDisabled();\n    }\n    window.addEventListener('load', handleDisabled);\n  }\n}\n\nfunction InjectStyles() {\n  var cssFile = chrome.runtime.getURL('css/injected.css');\n  var fileref = document.createElement('link');\n  fileref.setAttribute('rel', 'stylesheet');\n  fileref.setAttribute('type', 'text/css');\n  fileref.setAttribute('href', cssFile);\n  document.head.appendChild(fileref);\n  document.getElementsByTagName('html')[0].appendChild(fileref);\n}\n\nfunction InjectCustomIcons() {\n  const fontURL = chrome.runtime.getURL('fonts/IconFamily.woff');\n\n  const style = document.createElement('style');\n  style.setAttribute('type', 'text/css');\n  style.innerHTML = `\n    @font-face {\n      font-family: 'IconFamily';\n      src: url('${fontURL}') format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }`;\n  document.head.appendChild(style);\n}\n\nexport function AppendElementsToDisabledPage() {\n  AddBetterSEQTAElements(false);\n\n  let settingsStyle = document.createElement('style');\n  settingsStyle.innerText = `\n  .addedButton {\n    position: absolute !important;\n    right: 50px;\n    width: 35px;\n    height: 35px;\n    padding: 6px !important;\n    overflow: unset !important;\n    border-radius: 50%;\n    margin: 7px !important;\n    cursor: pointer;\n    color: white !important;\n  }\n  .addedButton svg {\n    margin: 6px;\n  }\n  .outside-container {\n    top: 48px !important;\n  }\n  `;\n  document.head.append(settingsStyle);\n}\n\nnew StorageListener();\nnew MessageHandler();\n\nvar PageLoaded = false;\nasync function CheckLoadOnPeriods() {\n  if (!PageLoaded) {\n    await delay(1000);\n    var code = document.getElementsByClassName('code')[0];\n    if (code && !UserInitalCode) {\n      LoadPageElements();\n      finishLoad();\n      PageLoaded = true;\n    }\n    if (!code) {\n      CheckLoadOnPeriods();\n    }\n  }\n}\n\nexport function closeSettings() {\n  var extensionsettings = document.getElementById('ExtensionPopup');\n\n  if (SettingsClicked == true) {\n    extensionsettings.classList.add('hide');\n    animate(\n      '#ExtensionPopup',\n      { opacity: [1, 0], scale: [1, 0] },\n      { easing: spring({ stiffness: 220, damping: 18 }) }\n      );\n    SettingsClicked = false;\n  }\n\n  extensionsettings.classList.add('hide');\n}\n\nfunction addExtensionSettings() {\n  const link = document.createElement('link');\n  link.href = chrome.runtime.getURL('popup/popup.css');\n  link.type = 'text/css';\n  link.rel = 'stylesheet';\n  document.querySelector('html').appendChild(link);\n\n  const extensionPopup = document.createElement('div');\n  extensionPopup.classList.add('outside-container', 'hide');\n  extensionPopup.id = 'ExtensionPopup';\n  document.body.appendChild(extensionPopup);\n\n  const extensionIframe = document.createElement('iframe');\n  extensionIframe.src = chrome.runtime.getURL('interface/index.html');\n  extensionIframe.id = 'ExtensionIframe';\n  extensionIframe.allowTransparency = true;\n  extensionIframe.style.width = '384px';\n  extensionIframe.style.height = '600px';\n  extensionIframe.style.border = 'none';\n  extensionIframe.setAttribute('excludeDarkCheck', true);\n  extensionPopup.appendChild(extensionIframe);\n\n  const container = document.getElementById('container');\n  const closeExtensionPopup = () => {\n    extensionPopup.classList.add('hide');\n    animate(\n      '#ExtensionPopup',\n      { opacity: [1, 0], scale: [1, 0] },\n      { easing: [.22, .03, .26, 1] }\n    );\n    SettingsClicked = false;\n  };\n  container.onclick = (event) => {\n    if (event.target.closest('#AddedSettings') == null && SettingsClicked) {\n      closeExtensionPopup()\n    }\n  };\n}\n\nfunction ApplyDraggableFunctions() {\n  var listItens = document.querySelectorAll('.draggable');\n  [].forEach.call(listItens, function (item) {\n    addEventsDragAndDrop(item);\n  });\n}\n\nvar dragSrcEl;\n\nfunction dragStart(e) {\n  this.style.opacity = '0.4';\n  dragSrcEl = this;\n  e.dataTransfer.effectAllowed = 'move';\n  e.dataTransfer.setData('text/html', this.innerHTML);\n}\n\nfunction dragEnter() {\n  this.classList.add('over');\n}\n\nfunction dragLeave(e) {\n  e.stopPropagation();\n  this.classList.remove('over');\n}\n\nfunction dragOver(e) {\n  e.preventDefault();\n  e.dataTransfer.dropEffect = 'move';\n  return false;\n}\n\nfunction dragDrop() {\n  if (dragSrcEl != this) {\n    const parentA = this.parentNode;\n    const siblingA = this.nextSibling === dragSrcEl ? this : this.nextSibling;\n\n    // Move `this` to before the `dragSrcEl`\n    dragSrcEl.parentNode.insertBefore(this, dragSrcEl);\n\n    // Move `dragSrcEl` to before the sibling of `this`\n    parentA.insertBefore(dragSrcEl, siblingA);\n\n    // Save position of all menu items\n    let children = parentA.childNodes;\n    let listorder = [];\n\n    for (let i = 0; i < children.length; i++) {\n      const elm = children[i];\n      listorder.push(elm.dataset.key);\n    }\n\n    chrome.storage.local.set({ menuorder: listorder });\n  }\n  return false;\n}\n\nfunction dragEnd() {\n  var listItens = document.querySelectorAll('.draggable');\n  [].forEach.call(listItens, function (item) {\n    item.classList.remove('over');\n  });\n  this.style.opacity = '1';\n}\n\nfunction addEventsDragAndDrop(el) {\n  el.addEventListener('dragstart', dragStart, false);\n  el.addEventListener('dragenter', dragEnter, false);\n  el.addEventListener('dragover', dragOver, false);\n  el.addEventListener('dragleave', dragLeave, false);\n  el.addEventListener('drop', dragDrop, false);\n  el.addEventListener('dragend', dragEnd, false);\n}\n\nfunction cloneAttributes(target, source) {\n  [...source.attributes].forEach((attr) => {\n    target.setAttribute(attr.nodeName, attr.nodeValue);\n  });\n}\n\nexport function OpenMenuOptions() {\n  chrome.storage.local.get(null, function (result) {\n    var container = document.getElementById('container');\n    var menu = document.getElementById('menu');\n\n    if (result.defaultmenuorder.length == '0') {\n      let childnodes = menu.firstChild.childNodes;\n      let newdefaultmenuorder = [];\n      for (let i = 0; i < childnodes.length; i++) {\n        const element = childnodes[i];\n        newdefaultmenuorder.push(element.dataset.key);\n        chrome.storage.local.set({ defaultmenuorder: newdefaultmenuorder });\n      }\n    }\n    let childnodes = menu.firstChild.childNodes;\n    if (result.defaultmenuorder.length != childnodes.length) {\n      for (let i = 0; i < childnodes.length; i++) {\n        const element = childnodes[i];\n        if (!result.defaultmenuorder.indexOf(element.dataset.key)) {\n          let newdefaultmenuorder = result.defaultmenuorder;\n          newdefaultmenuorder.push(element.dataset.key);\n          chrome.storage.local.set({ defaultmenuorder: newdefaultmenuorder });\n        }\n      }\n    }\n\n    MenuOptionsOpen = true;\n\n    let cover = document.createElement('div');\n    cover.classList.add('notMenuCover');\n    menu.style.zIndex = '20';\n    menu.style.setProperty('--menuHidden', 'flex');\n    container.append(cover);\n\n    let menusettings = document.createElement('div');\n    menusettings.classList.add('editmenuoption-container');\n\n    let defaultbutton = document.createElement('div');\n    defaultbutton.classList.add('editmenuoption');\n    defaultbutton.innerText = 'Restore Default';\n    defaultbutton.id = 'restoredefaultoption';\n\n    let savebutton = document.createElement('div');\n    savebutton.classList.add('editmenuoption');\n    savebutton.innerText = 'Save';\n    savebutton.id = 'restoredefaultoption';\n\n    menusettings.appendChild(defaultbutton);\n    menusettings.appendChild(savebutton);\n\n    menu.appendChild(menusettings);\n\n    let ListItems = menu.firstChild.childNodes;\n    for (let i = 0; i < ListItems.length; i++) {\n      const element = ListItems[i];\n\n      element.classList.add('draggable');\n      element.setAttribute('draggable', true);\n      if (element.classList.contains('hasChildren')) {\n        element.classList.remove('active');\n        menu.firstChild.classList.remove('noscroll');\n      }\n\n      let MenuItemToggle = stringToHTML(\n        `<div class=\"onoffswitch\" style=\"margin: auto 0;\"><input class=\"onoffswitch-checkbox notification menuitem\" type=\"checkbox\" id=\"${element.dataset.key}\"><label for=\"${element.dataset.key}\" class=\"onoffswitch-label\"></label>`,\n      ).firstChild;\n      element.append(MenuItemToggle);\n\n      if (!element.dataset.betterseqta) {\n        var a = document.createElement('section');\n        a.innerHTML = element.innerHTML;\n        cloneAttributes(a, element);\n        menu.firstChild.insertBefore(a, element);\n        element.remove();\n      }\n    }\n\n    if (Object.keys(result.menuitems).length == 0) {\n      menubuttons = menu.firstChild.childNodes;\n      var menuItems = {};\n      for (var i = 0; i < menubuttons.length; i++) {\n        var id = menubuttons[i].dataset.key;\n        const element = {};\n        element.toggle = true;\n        menuItems[id] = element;\n      }\n      chrome.storage.local.set({ menuitems: menuItems });\n    }\n\n    var menubuttons = document.getElementsByClassName('menuitem');\n    chrome.storage.local.get(['menuitems'], function (result) {\n      var menuItems = result.menuitems;\n      let buttons = document.getElementsByClassName('menuitem');\n      for (var i = 0; i < buttons.length; i++) {\n        var id = buttons[i].id;\n        if (menuItems[id]) {\n          buttons[i].checked = menuItems[id].toggle;\n        }\n        if (!menuItems[id]) {\n          buttons[i].checked = true;\n        }\n      }\n    });\n\n    ApplyDraggableFunctions();\n\n    function StoreMenuSettings() {\n      chrome.storage.local.get(['menuitems'], function () {\n        var menuItems = {};\n        menubuttons = menu.firstChild.childNodes;\n        let button = document.getElementsByClassName('menuitem');\n        for (var i = 0; i < menubuttons.length; i++) {\n          var id = menubuttons[i].dataset.key;\n          const element = {};\n          element.toggle = button[i].checked;\n\n          menuItems[id] = element;\n        }\n        chrome.storage.local.set({ menuitems: menuItems });\n      });\n    }\n\n    function changeDisplayProperty(element) {\n      if (!element.checked) {\n        element.parentNode.parentNode.style.display = 'var(--menuHidden)';\n      }\n      if (element.checked) {\n        element.parentNode.parentNode.style.setProperty(\n          'display',\n          'flex',\n          'important',\n        );\n      }\n    }\n\n    for (let i = 0; i < menubuttons.length; i++) {\n      const element = menubuttons[i];\n      element.addEventListener('change', () => {\n        StoreMenuSettings();\n        changeDisplayProperty(element);\n      });\n    }\n\n    function closeAll() {\n      ListItems = menu.firstChild.childNodes;\n      menusettings.remove();\n      cover.remove();\n      MenuOptionsOpen = false;\n      menu.style.setProperty('--menuHidden', 'none');\n\n      for (let i = 0; i < ListItems.length; i++) {\n        const element = ListItems[i];\n        element.classList.remove('draggable');\n        element.setAttribute('draggable', false);\n\n        if (!element.dataset.betterseqta) {\n          var a = document.createElement('li');\n          a.innerHTML = element.innerHTML;\n          cloneAttributes(a, element);\n          menu.firstChild.insertBefore(a, element);\n          element.remove();\n        }\n      }\n\n      let switches = menu.querySelectorAll('.onoffswitch');\n      for (let i = 0; i < switches.length; i++) {\n        switches[i].remove();\n      }\n\n      StoreMenuSettings();\n    }\n\n    cover.addEventListener('click', closeAll);\n    savebutton.addEventListener('click', closeAll);\n\n    defaultbutton.addEventListener('click', function () {\n      chrome.storage.local.get(null, function (response) {\n        const options = response.defaultmenuorder;\n        chrome.storage.local.set({ menuorder: options });\n        ChangeMenuItemPositions(options);\n\n        for (let i = 0; i < menubuttons.length; i++) {\n          const element = menubuttons[i];\n          element.checked = true;\n          element.parentNode.parentNode.style.setProperty(\n            'display',\n            'flex',\n            'important',\n          );\n        }\n        StoreMenuSettings();\n      });\n    });\n  });\n}\n\nfunction ReplaceMenuSVG(element, svg) {\n  let item = element.firstChild;\n  item.firstChild.remove();\n\n  if (element.dataset.key == 'messages') {\n    element.firstChild.innerText = 'Direct Messages';\n  }\n\n  let newsvg = stringToHTML(svg).firstChild;\n  item.insertBefore(newsvg, item.firstChild);\n}\n\nasync function AddBetterSEQTAElements(toggle) {\n  var code = document.getElementsByClassName('code')[0];\n  // Replaces students code with the version of BetterSEQTA\n  if (code != null) {\n    if (!code.innerHTML.includes('BetterSEQTA')) {\n      UserInitalCode = code.innerText;\n      code.innerText = `BetterSEQTA v${chrome.runtime.getManifest().version}`;\n      code.setAttribute('data-hover', 'Click for user code');\n      code.addEventListener('click', function () {\n        var code = document.getElementsByClassName('code')[0];\n        if (code.innerText.includes('BetterSEQTA')) {\n          code.innerText = UserInitalCode;\n          code.setAttribute('data-hover', 'Click for BetterSEQTA version');\n        } else {\n          code.innerText = `BetterSEQTA v${\n            chrome.runtime.getManifest().version\n          }`;\n          code.setAttribute('data-hover', 'Click for user code');\n        }\n      });\n      if (toggle) {\n        // Creates Home menu button and appends it as the first child of the list\n\n        const result = chrome.storage.local.get(['animatedbk']);\n        const sliderVal = chrome.storage.local.get(['bksliderinput']);\n\n        result.then(animbkEnable);\n        sliderVal.then(updateBgDurations);\n\n        // Load darkmode state\n        chrome.storage.local.get(['DarkMode'], function (result) {\n          DarkMode = result.DarkMode;\n        });\n\n        var titlebar = document.createElement('div');\n        titlebar.classList.add('titlebar');\n        let container = document.getElementById('content');\n        container.append(titlebar);\n        var NewButtonStr = '<li class=\"item\" data-key=\"home\" id=\"homebutton\" data-path=\"/home\" data-betterseqta=\"true\"><label><svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" /></svg><span>Home</span></label></li>';\n        var NewButton = stringToHTML(NewButtonStr);\n        var menu = document.getElementById('menu');\n        var List = menu.firstChild;\n        List.insertBefore(NewButton.firstChild, List.firstChild);\n\n        fetch(`${location.origin}/seqta/student/login`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json; charset=utf-8',\n          },\n          body: JSON.stringify({\n            mode: 'normal',\n            query: null,\n            redirect_url: location.origin,\n          }),\n        })\n          .then((result) => result.json())\n          .then((response) => {\n            let info = response.payload;\n\n            var titlebar = document.getElementsByClassName('titlebar')[0];\n            titlebar.append(\n              stringToHTML(\n                '<div class=\"userInfosvgdiv tooltip\"><svg class=\"userInfosvg\" viewBox=\"0 0 24 24\"><path fill=\"var(--text-primary)\" d=\"M12,19.2C9.5,19.2 7.29,17.92 6,16C6.03,14 10,12.9 12,12.9C14,12.9 17.97,14 18,16C16.71,17.92 14.5,19.2 12,19.2M12,5A3,3 0 0,1 15,8A3,3 0 0,1 12,11A3,3 0 0,1 9,8A3,3 0 0,1 12,5M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2Z\"></path></svg><div class=\"tooltiptext topmenutooltip\" id=\"logouttooltip\"></div></div>',\n              ).firstChild,\n            );\n            var userinfostr = `<div class=\"userInfo\"><div class=\"userInfoText\"><div style=\"display: flex; align-items: center;\"><p class=\"userInfohouse userInfoCode\"></p><p class=\"userInfoName\">${info.userDesc}</p></div><p class=\"userInfoCode\">${UserInitalCode}</p></div></div>`;\n            var userinfo = stringToHTML(userinfostr).firstChild;\n\n            titlebar.append(userinfo);\n\n            var logoutbutton = document.getElementsByClassName('logout')[0];\n            var userInfosvgdiv = document.getElementById('logouttooltip');\n            userInfosvgdiv.appendChild(logoutbutton);\n\n            fetch(`${location.origin}/seqta/student/load/message/people`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n              },\n              body: JSON.stringify({ mode: 'student' }),\n            })\n              .then((result) => result.json())\n              .then((response) => {\n                let students = response.payload;\n                var index = students.findIndex(function (person) {\n                  return (\n                    person.firstname == info.userDesc.split(' ')[0] &&\n                    person.surname == info.userDesc.split(' ')[1]\n                  );\n                });\n\n                let houseelement =\n                  document.getElementsByClassName('userInfohouse')[0];\n                if (students[index]?.house) {\n                  houseelement.style.background = students[index].house_colour;\n                  try {\n                    let colorresult = GetThresholdOfColor(\n                      students[index]?.house_colour,\n                    );\n\n                    if (colorresult && colorresult > 300) {\n                      houseelement.style.color = 'black';\n                    } else if (colorresult < 300) {\n                      houseelement.style.color = 'white';\n                    } else {\n                      houseelement.style.color = 'black';\n                    }\n                    houseelement.innerText =\n                      students[index].year + students[index].house;\n                  } catch (error) {\n                    houseelement.innerText = students[index].house;\n                  }\n                } else {\n                  houseelement.innerText = students[index].year;\n                }\n              });\n          });\n\n        var NewsButtonStr = '<li class=\"item\" data-key=\"news\" id=\"newsbutton\" data-path=\"/news\" data-betterseqta=\"true\"><label><svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M20 3H4C2.89 3 2 3.89 2 5V19C2 20.11 2.89 21 4 21H20C21.11 21 22 20.11 22 19V5C22 3.89 21.11 3 20 3M5 7H10V13H5V7M19 17H5V15H19V17M19 13H12V11H19V13M19 9H12V7H19V9Z\" /></svg>News</label></li>';\n        var NewsButton = stringToHTML(NewsButtonStr);\n        List.appendChild(NewsButton.firstChild);\n\n        editmenu = document.createElement('div');\n        editmenu.classList.add('editmenu');\n\n        let svg = stringToHTML(\n          '<svg style=\"width:24px;height:24px;padding:5px;\" id=\"editmenu\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\" /></svg>',\n        );\n        editmenu.append(svg.firstChild);\n\n        menu.appendChild(editmenu);\n\n        let a = document.createElement('div');\n        a.classList.add('icon-cover');\n        a.id = 'icon-cover';\n        menu.appendChild(a);\n\n        var editmenu = document.querySelector('#editmenu');\n        editmenu.addEventListener('click', function () {\n          if (!MenuOptionsOpen) {\n            OpenMenuOptions();\n          }\n        });\n\n        var menuCover = document.querySelector('#icon-cover');\n        menuCover.addEventListener('click', function () {\n          location.href = '../#?page=/home';\n          SendHomePage();\n          document\n            .getElementById('menu')\n            .firstChild.classList.remove('noscroll');\n        });\n        // Creates the home container when the menu button is pressed\n        var homebutton = document.getElementById('homebutton');\n        homebutton.addEventListener('click', function () {\n          if (!MenuOptionsOpen) {\n            SendHomePage();\n          }\n        });\n\n        // Creates the news container when the menu button is pressed\n        var newsbutton = document.getElementById('newsbutton');\n        newsbutton.addEventListener('click', function () {\n          if (!MenuOptionsOpen) {\n            SendNewsPage();\n          }\n        });\n      }\n\n      appendBackgroundToUI();\n      addExtensionSettings();\n\n      // If betterSEQTA+ is enabled, run the code\n      if (toggle) {\n        // Creates settings and dashboard buttons next to alerts\n        var SettingsButton = stringToHTML(\n          '<button class=\"addedButton tooltip\" id=\"AddedSettings\"\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><g><g><path d=\"M23.182,6.923c-.29,0-3.662,2.122-4.142,2.4l-2.8-1.555V4.511l4.257-2.456a.518.518,0,0,0,.233-.408.479.479,0,0,0-.233-.407,6.511,6.511,0,1,0-3.327,12.107,6.582,6.582,0,0,0,6.148-4.374,5.228,5.228,0,0,0,.333-1.542A.461.461,0,0,0,23.182,6.923Z\"></path><path d=\"M9.73,10.418,7.376,12.883c-.01.01-.021.016-.03.025L1.158,19.1a2.682,2.682,0,1,0,3.793,3.793l4.583-4.582,0,0,4.1-4.005-.037-.037A9.094,9.094,0,0,1,9.73,10.418ZM3.053,21.888A.894.894,0,1,1,3.946,21,.893.893,0,0,1,3.053,21.888Z\"></path></g></g></svg><div class=\"tooltiptext topmenutooltip\">BetterSEQTA+ Settings</div></button>',\n        );\n        var ContentDiv = document.getElementById('content');\n        ContentDiv.append(SettingsButton.firstChild);\n\n        const result = await new Promise(resolve => {\n          chrome.storage.local.get(null, resolve);\n        });\n        \n        const DarkMode = result.DarkMode;\n        const tooltipString = GetLightDarkModeString(DarkMode);\n        const svgContent = DarkMode ? '<defs><clipPath id=\"__lottie_element_80\"><rect width=\"24\" height=\"24\" x=\"0\" y=\"0\"></rect></clipPath></defs><g clip-path=\"url(#__lottie_element_80)\"><g style=\"display: block;\" transform=\"matrix(1,0,0,1,12,12)\" opacity=\"1\"><g opacity=\"1\" transform=\"matrix(1,0,0,1,0,0)\"><path fill-opacity=\"1\" d=\" M0,-4 C-2.2100000381469727,-4 -4,-2.2100000381469727 -4,0 C-4,2.2100000381469727 -2.2100000381469727,4 0,4 C2.2100000381469727,4 4,2.2100000381469727 4,0 C4,-2.2100000381469727 2.2100000381469727,-4 0,-4z\"></path></g></g><g style=\"display: block;\" transform=\"matrix(1,0,0,1,12,12)\" opacity=\"1\"><g opacity=\"1\" transform=\"matrix(1,0,0,1,0,0)\"><path fill-opacity=\"1\" d=\" M0,6 C-3.309999942779541,6 -6,3.309999942779541 -6,0 C-6,-3.309999942779541 -3.309999942779541,-6 0,-6 C3.309999942779541,-6 6,-3.309999942779541 6,0 C6,3.309999942779541 3.309999942779541,6 0,6z M8,-3.309999942779541 C8,-3.309999942779541 8,-8 8,-8 C8,-8 3.309999942779541,-8 3.309999942779541,-8 C3.309999942779541,-8 0,-11.3100004196167 0,-11.3100004196167 C0,-11.3100004196167 -3.309999942779541,-8 -3.309999942779541,-8 C-3.309999942779541,-8 -8,-8 -8,-8 C-8,-8 -8,-3.309999942779541 -8,-3.309999942779541 C-8,-3.309999942779541 -11.3100004196167,0 -11.3100004196167,0 C-11.3100004196167,0 -8,3.309999942779541 -8,3.309999942779541 C-8,3.309999942779541 -8,8 -8,8 C-8,8 -3.309999942779541,8 -3.309999942779541,8 C-3.309999942779541,8 0,11.3100004196167 0,11.3100004196167 C0,11.3100004196167 3.309999942779541,8 3.309999942779541,8 C3.309999942779541,8 8,8 8,8 C8,8 8,3.309999942779541 8,3.309999942779541 C8,3.309999942779541 11.3100004196167,0 11.3100004196167,0 C11.3100004196167,0 8,-3.309999942779541 8,-3.309999942779541z\"></path></g></g></g>' :\n          '<defs><clipPath id=\"__lottie_element_263\"><rect width=\"24\" height=\"24\" x=\"0\" y=\"0\"></rect></clipPath></defs><g clip-path=\"url(#__lottie_element_263)\"><g style=\"display: block;\" transform=\"matrix(1.5,0,0,1.5,7,12)\" opacity=\"1\"><g opacity=\"1\" transform=\"matrix(1,0,0,1,0,0)\"><path fill-opacity=\"1\" d=\" M0,-4 C-2.2100000381469727,-4 -1.2920000553131104,-2.2100000381469727 -1.2920000553131104,0 C-1.2920000553131104,2.2100000381469727 -2.2100000381469727,4 0,4 C2.2100000381469727,4 4,2.2100000381469727 4,0 C4,-2.2100000381469727 2.2100000381469727,-4 0,-4z\"></path></g></g><g style=\"display: block;\" transform=\"matrix(-1,0,0,-1,12,12)\" opacity=\"1\"><g opacity=\"1\" transform=\"matrix(1,0,0,1,0,0)\"><path fill-opacity=\"1\" d=\" M0,6 C-3.309999942779541,6 -6,3.309999942779541 -6,0 C-6,-3.309999942779541 -3.309999942779541,-6 0,-6 C3.309999942779541,-6 6,-3.309999942779541 6,0 C6,3.309999942779541 3.309999942779541,6 0,6z M8,-3.309999942779541 C8,-3.309999942779541 8,-8 8,-8 C8,-8 3.309999942779541,-8 3.309999942779541,-8 C3.309999942779541,-8 0,-11.3100004196167 0,-11.3100004196167 C0,-11.3100004196167 -3.309999942779541,-8 -3.309999942779541,-8 C-3.309999942779541,-8 -8,-8 -8,-8 C-8,-8 -8,-3.309999942779541 -8,-3.309999942779541 C-8,-3.309999942779541 -11.3100004196167,0 -11.3100004196167,0 C-11.3100004196167,0 -8,3.309999942779541 -8,3.309999942779541 C-8,3.309999942779541 -8,8 -8,8 C-8,8 -3.309999942779541,8 -3.309999942779541,8 C-3.309999942779541,8 0,11.3100004196167 0,11.3100004196167 C0,11.3100004196167 3.309999942779541,8 3.309999942779541,8 C3.309999942779541,8 8,8 8,8 C8,8 8,3.309999942779541 8,3.309999942779541 C8,3.309999942779541 11.3100004196167,0 11.3100004196167,0 C11.3100004196167,0 8,-3.309999942779541 8,-3.309999942779541z\"></path></g></g></g>';\n        \n        const LightDarkModeButton = stringToHTML(`\n          <button class=\"addedButton DarkLightButton tooltip\" id=\"LightDarkModeButton\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\">${svgContent}</svg>\n            <div class=\"tooltiptext topmenutooltip\" id=\"darklighttooliptext\">${tooltipString}</div>\n          </button>\n        `);\n        \n        ContentDiv.append(LightDarkModeButton.firstChild);\n        \n        updateAllColors(DarkMode, result.selectedColor);\n\n        document.getElementById('LightDarkModeButton').addEventListener('click', async () => {\n          const result = await new Promise(resolve => {\n            chrome.storage.local.get(null, resolve);\n          });\n          \n          const newDarkMode = !result.DarkMode;\n          chrome.storage.local.set({ DarkMode: newDarkMode });\n          \n          updateAllColors(newDarkMode, result.selectedColor);\n          \n          const darklightText = document.getElementById('darklighttooliptext');\n          darklightText.innerText = GetLightDarkModeString(newDarkMode);\n        });\n\n        // Locate the menuToggle element\n        const menuToggle = document.getElementById('menuToggle');\n        menuToggle.innerHTML = '';\n\n        // Create three divs to act as lines of the hamburger icon\n        for (let i = 0; i < 3; i++) {\n          const line = document.createElement('div');\n          line.className = 'hamburger-line';\n          menuToggle.appendChild(line);\n        }\n      } else {\n        // Creates settings and dashboard buttons next to alerts\n        SettingsButton = stringToHTML(\n          '<button class=\"addedButton\" id=\"AddedSettings\"\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><g style=\"fill: var(--text-color);\"><g><path d=\"M23.182,6.923c-.29,0-3.662,2.122-4.142,2.4l-2.8-1.555V4.511l4.257-2.456a.518.518,0,0,0,.233-.408.479.479,0,0,0-.233-.407,6.511,6.511,0,1,0-3.327,12.107,6.582,6.582,0,0,0,6.148-4.374,5.228,5.228,0,0,0,.333-1.542A.461.461,0,0,0,23.182,6.923Z\"></path><path d=\"M9.73,10.418,7.376,12.883c-.01.01-.021.016-.03.025L1.158,19.1a2.682,2.682,0,1,0,3.793,3.793l4.583-4.582,0,0,4.1-4.005-.037-.037A9.094,9.094,0,0,1,9.73,10.418ZM3.053,21.888A.894.894,0,1,1,3.946,21,.893.893,0,0,1,3.053,21.888Z\"></path></g></g></svg></button>',\n        );\n        ContentDiv = document.getElementById('content');\n        ContentDiv.append(SettingsButton.firstChild);\n      }\n\n      var AddedSettings = document.getElementById('AddedSettings');\n      var extensionPopup = document.getElementById('ExtensionPopup');\n      \n      AddedSettings.addEventListener('click', function () {\n        if (SettingsClicked) {\n          extensionPopup.classList.add('hide');\n          animate(\n            '#ExtensionPopup',\n            { opacity: [1, 0], scale: [1, 0] },\n            { easing: spring({ stiffness: 220, damping: 18 }) }\n          );\n          SettingsClicked = false;      \n        } else {\n          extensionPopup.classList.remove('hide');\n          animate(\n            '#ExtensionPopup',\n            { opacity: [0, 1], scale: [0, 1] },\n            { easing: spring({ stiffness: 260, damping: 24 }) }\n          )\n          SettingsClicked = true;\n        }\n      });\n    }\n  }\n}\n\nlet tooltipstring;\n\nfunction GetLightDarkModeString(darkmodetoggle) {\n  if (darkmodetoggle) {\n    tooltipstring = 'Switch to light theme';\n  } else {\n    tooltipstring = 'Switch to dark theme';\n  }\n  return tooltipstring;\n}\n\nfunction CheckCurrentLesson(lesson, num) {\n  var startTime = lesson.from;\n  var endTime = lesson.until;\n  // Gets current time\n  let currentDate = new Date();\n\n  // Takes start time of current lesson and makes it into a Date function for comparison\n  let startDate = new Date(currentDate.getTime());\n  startDate.setHours(startTime.split(':')[0]);\n  startDate.setMinutes(startTime.split(':')[1]);\n  startDate.setSeconds('00');\n\n  // Takes end time of current lesson and makes it into a Date function for comparison\n  let endDate = new Date(currentDate.getTime());\n  endDate.setHours(endTime.split(':')[0]);\n  endDate.setMinutes(endTime.split(':')[1]);\n  endDate.setSeconds('00');\n\n  // Gets the difference between the start time and current time\n  var difference = startDate.getTime() - currentDate.getTime();\n  // Converts the difference into minutes\n  var minutes = Math.floor(difference / 1000 / 60);\n\n  // Checks if current time is between the start time and end time of current tested lesson\n  let valid = startDate < currentDate && endDate > currentDate;\n\n  let id = lesson.code + num;\n  const date = new Date();\n\n  var elementA = document.getElementById(id);\n  if (!elementA) {\n    clearInterval(LessonInterval);\n  } else {\n    if (\n      currentSelectedDate.toLocaleDateString('en-au') ==\n      date.toLocaleDateString('en-au')\n    ) {\n      if (valid) {\n        // Apply the activelesson class to increase the box-shadow of current lesson\n        elementA.classList.add('activelesson');\n      } else {\n        // Removes the activelesson class to ensure only the active lesson have the class\n        if (elementA != null) {\n          elementA.classList.remove('activelesson');\n        }\n      }\n    }\n  }\n\n  // If 5 minutes before the start of another lesson:\n  if (minutes == 5) {\n    chrome.storage.local.get('lessonalert', function (result) {\n      if (result.lessonalert) {\n        // Checks if notifications are supported\n        if (!window.Notification) {\n          console.log('Browser does not support notifications.');\n        } else {\n          // check if permission is already granted\n          if (Notification.permission === 'granted') {\n            new Notification('Next Lesson in 5 Minutes:', {\n              body:\n                'Subject: ' +\n                lesson.description +\n                ' \\nRoom: ' +\n                lesson.room +\n                ' \\nTeacher: ' +\n                lesson.staff,\n            });\n          } else {\n            // request permission from user\n            Notification.requestPermission()\n              .then(function (p) {\n                if (p === 'granted') {\n                  // show notification here\n                  new Notification('Next Lesson in 5 Minutes:', {\n                    body:\n                      'Subject: ' +\n                      lesson.description +\n                      ' \\nRoom: ' +\n                      lesson.room +\n                      ' \\nTeacher: ' +\n                      lesson.staff,\n                  });\n                } else {\n                  console.log('User blocked notifications.');\n                }\n              })\n              .catch(function (err) {\n                console.error(err);\n              });\n          }\n        }\n      }\n    });\n  }\n}\n\nexport function GetThresholdOfColor(color) {\n  // Case-insensitive regular expression for matching RGBA colors\n  const rgbaRegex = /rgba?\\(([^)]+)\\)/gi;\n\n  // Check if the color string is a gradient (linear or radial)\n  if (color.includes('gradient')) {\n    let gradientThresholds = [];\n\n    // Find and replace all instances of RGBA in the gradient\n    let match;\n    while ((match = rgbaRegex.exec(color)) !== null) {\n      // Extract the individual components (r, g, b, a)\n      const rgbaString = match[1];\n      const [r, g, b] = rgbaString.split(',').map(str => str.trim());\n\n      // Compute the threshold using your existing algorithm\n      const threshold = Math.sqrt(r ** 2 + g ** 2 + b ** 2);\n\n      // Store the computed threshold\n      gradientThresholds.push(threshold);\n    }\n\n    // Calculate the average threshold\n    const averageThreshold = gradientThresholds.reduce((acc, val) => acc + val, 0) / gradientThresholds.length;\n    \n    return averageThreshold;\n\n  } else {\n    // Handle the color as a simple RGBA (or hex, or whatever the Color library supports)\n    const rgb = Color.rgb(color).object();\n    return Math.sqrt(rgb.r ** 2 + rgb.g ** 2 + rgb.b ** 2);\n  }\n}\n\nfunction CheckCurrentLessonAll(lessons) {\n  // Checks each lesson and sets an interval to run every 60 seconds to continue updating\n  LessonInterval = setInterval(\n    function () {\n      for (let i = 0; i < lessons.length; i++) {\n        CheckCurrentLesson(lessons[i], i + 1);\n      }\n    }.bind(lessons),\n    60000,\n  );\n}\n\n// Helper function to build the assessment URL\nfunction buildAssessmentURL(programmeID, metaID, itemID = '') {\n  const base = '../#?page=/assessments/';\n  return itemID ? `${base}${programmeID}:${metaID}&item=${itemID}` : `${base}${programmeID}:${metaID}`;\n}\n\n// Function to create a lesson div element from a lesson object\nfunction makeLessonDiv(lesson, num) {\n  if (!lesson) throw new Error('No lesson provided.');\n\n  const { code, colour, description, staff, room, from, until, attendanceTitle, programmeID, metaID, assessments } = lesson;\n\n  // Construct the base lesson string with default values using ternary operators\n  let lessonString = `\n    <div class=\"day\" id=\"${code + num}\" style=\"${colour}\">\n      <h2>${description || 'Unknown'}</h2>\n      <h3>${staff || 'Unknown'}</h3>\n      <h3>${room || 'Unknown'}</h3>\n      <h4>${from || 'Unknown'} - ${until || 'Unknown'}</h4>\n      <h5>${attendanceTitle || 'Unknown'}</h5>\n  `;\n\n  // Add buttons for assessments and courses if applicable\n  if (programmeID !== 0) {\n    lessonString += `\n      <div class=\"day-button clickable\" style=\"right: 5px;\" onclick=\"document.querySelector('#menu ul').classList.add('noscroll'); location.href='${buildAssessmentURL(programmeID, metaID)}'\">${assessmentsicon}</div>\n      <div class=\"day-button clickable\" style=\"right: 35px;\" onclick=\"document.querySelector('#menu ul').classList.add('noscroll'); location.href='../#?page=/courses/${programmeID}:${metaID}'\">${coursesicon}</div>\n    `;\n  }\n\n  // Add assessments if they exist\n  if (assessments && assessments.length > 0) {\n    const assessmentString = assessments.map(element =>\n      `<p onclick=\"document.querySelector('#menu ul').classList.add('noscroll'); location.href = '${buildAssessmentURL(programmeID, metaID, element.id)}';\">${element.title}</p>`\n    ).join('');\n\n    lessonString += `\n      <div class=\"tooltip assessmenttooltip\">\n        <svg style=\"width:28px;height:28px;border-radius:0;\" viewBox=\"0 0 24 24\">\n          <path fill=\"#ed3939\" d=\"M16 2H4C2.9 2 2 2.9 2 4V20C2 21.11 2.9 22 4 22H16C17.11 22 18 21.11 18 20V4C18 2.9 17.11 2 16 2M16 20H4V4H6V12L8.5 9.75L11 12V4H16V20M20 15H22V17H20V15M22 7V13H20V7H22Z\" />\n        </svg>\n        <div class=\"tooltiptext\">${assessmentString}</div>\n      </div>\n    `;\n  }\n\n  lessonString += '</div>';\n\n  return stringToHTML(lessonString);\n}\n\nfunction CheckUnmarkedAttendance(lessonattendance) {\n  if (lessonattendance) {\n    var lesson = lessonattendance.label;\n  } else {\n    lesson = ' ';\n  }\n  return lesson;\n}\n\nfunction callHomeTimetable(date, change) {\n  // Creates a HTTP Post Request to the SEQTA page for the students timetable\n  var xhr = new XMLHttpRequest();\n  xhr.open('POST', `${location.origin}/seqta/student/load/timetable?`, true);\n  // Sets the response type to json\n  xhr.setRequestHeader('Content-Type', 'application/json; charset=utf-8');\n\n  xhr.onreadystatechange = function () {\n    // Once the response is ready\n    if (xhr.readyState === 4) {\n      var serverResponse = JSON.parse(xhr.response);\n      let lessonArray = [];\n      var DayContainer = document.getElementById('day-container');\n      // If items in response:\n      if (serverResponse.payload.items.length > 0) {\n        if (!DayContainer.innerText || change) {\n          for (let i = 0; i < serverResponse.payload.items.length; i++) {\n            lessonArray.push(serverResponse.payload.items[i]);\n          }\n          lessonArray.sort(function (a, b) {\n            return a.from.localeCompare(b.from);\n          });\n          // If items in the response, set each corresponding value into divs\n          // lessonArray = lessonArray.splice(1)\n          GetLessonColours().then((colours) => {\n            let subjects = colours;\n            for (let i = 0; i < lessonArray.length; i++) {\n              let subjectname = `timetable.subject.colour.${lessonArray[i].code}`;\n\n              let subject = subjects.find(\n                (element) => element.name === subjectname,\n              );\n              if (!subject) {\n                lessonArray[i].colour = '--item-colour: #8e8e8e;';\n              } else {\n                lessonArray[i].colour = `--item-colour: ${subject.value};`;\n                let result = GetThresholdOfColor(subject.value);\n\n                if (result > 300) {\n                  lessonArray[i].invert = true;\n                }\n              }\n              // Removes seconds from the start and end times\n              lessonArray[i].from = lessonArray[i].from.substring(0, 5);\n              lessonArray[i].until = lessonArray[i].until.substring(0, 5);\n\n              // Checks if attendance is unmarked, and sets the string to \" \".\n              lessonArray[i].attendanceTitle = CheckUnmarkedAttendance(\n                lessonArray[i].attendance,\n              );\n            }\n            // If on home page, apply each lesson to HTML with information in each div\n            DayContainer.innerText = '';\n            for (let i = 0; i < lessonArray.length; i++) {\n              var div = makeLessonDiv(lessonArray[i], i + 1);\n              // Append each of the lessons into the day-container\n              if (lessonArray[i].invert) {\n                div.firstChild.classList.add('day-inverted');\n              }\n\n              DayContainer.append(div.firstChild);\n            }\n\n            const today = new Date();\n            if (currentSelectedDate.getDate() == today.getDate()) {\n              for (let i = 0; i < lessonArray.length; i++) {\n                CheckCurrentLesson(lessonArray[i], i + 1);\n              }\n              // For each lesson, check the start and end times\n              CheckCurrentLessonAll(lessonArray);\n            }\n          });\n        }\n      } else {\n        if (!DayContainer.innerText || change) {\n          DayContainer.innerText = '';\n          var dummyDay = document.createElement('div');\n          dummyDay.classList.add('day-empty');\n          let img = document.createElement('img');\n          img.src = chrome.runtime.getURL('icons/betterseqta-light-icon.png');\n          let text = document.createElement('p');\n          text.innerText = 'No lessons available.';\n          dummyDay.append(img);\n          dummyDay.append(text);\n          DayContainer.append(dummyDay);\n        }\n      }\n    }\n  };\n  xhr.send(\n    JSON.stringify({\n      // Information sent to SEQTA page as a request with the dates and student number\n      from: date,\n      until: date,\n      // Funny number\n      student: 69,\n    }),\n  );\n}\n\nfunction GetUpcomingAssessments() {\n  let func = fetch(`${location.origin}/seqta/student/assessment/list/upcoming?`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json; charset=utf-8',\n    },\n    body: JSON.stringify({ student: 69 }),\n  });\n\n  return func\n    .then((result) => result.json())\n    .then((response) => response.payload);\n}\n\nasync function GetActiveClasses() {\n  try {\n    const response = await fetch(`${location.origin}/seqta/student/load/subjects?`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json; charset=utf-8' },\n      body: JSON.stringify({})\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data.payload;\n  } catch (error) {\n    console.error('Oops! There was a problem fetching active classes:', error);\n  }\n}\n\nfunction comparedate(obj1, obj2) {\n  if (obj1.date < obj2.date) {\n    return -1;\n  }\n  if (obj1.date > obj2.date) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction CreateElement(type, class_, id, innerText, innerHTML, style) {\n  let element = document.createElement(type);\n  if (class_ !== undefined) {\n    element.classList.add(class_);\n  }\n  if (id !== undefined) {\n    element.id = id;\n  }\n  if (innerText !== undefined) {\n    element.innerText = innerText;\n  }\n  if (innerHTML !== undefined) {\n    element.innerHTML = innerHTML;\n  }\n  if (style !== undefined) {\n    element.style = style;\n  }\n  return element;\n}\n\nfunction createAssessmentDateDiv(date, value, datecase = undefined) {\n  var options = { weekday: 'long', month: 'long', day: 'numeric' };\n  const FormattedDate = new Date(date);\n\n  const assessments = value.assessments;\n  const container = value.div;\n\n  let DateTitleDiv = document.createElement('div');\n  DateTitleDiv.classList.add('upcoming-date-title');\n\n  if (datecase) {\n    let datetitle = document.createElement('h5');\n    datetitle.classList.add('upcoming-special-day');\n    datetitle.innerText = datecase;\n    DateTitleDiv.append(datetitle);\n    container.setAttribute('data-day', datecase);\n  }\n\n  let DateTitle = document.createElement('h5');\n  DateTitle.innerText = FormattedDate.toLocaleDateString('en-AU', options);\n  DateTitleDiv.append(DateTitle);\n\n  container.append(DateTitleDiv);\n\n  let assessmentContainer = document.createElement('div');\n  assessmentContainer.classList.add('upcoming-date-assessments');\n\n  for (let i = 0; i < assessments.length; i++) {\n    const element = assessments[i];\n    let item = document.createElement('div');\n    item.classList.add('upcoming-assessment');\n    item.setAttribute('data-subject', element.code);\n    item.id = `assessment${element.id}`;\n\n    item.style = element.colour;\n\n    let titlediv = document.createElement('div');\n    titlediv.classList.add('upcoming-subject-title');\n\n    let titlesvg =\n      stringToHTML(`<svg viewBox=\"0 0 24 24\" style=\"width:35px;height:35px;fill:white;\">\n    <path d=\"M6 20H13V22H6C4.89 22 4 21.11 4 20V4C4 2.9 4.89 2 6 2H18C19.11 2 20 2.9 20 4V12.54L18.5 11.72L18 12V4H13V12L10.5 9.75L8 12V4H6V20M24 17L18.5 14L13 17L18.5 20L24 17M15 19.09V21.09L18.5 23L22 21.09V19.09L18.5 21L15 19.09Z\"></path>\n    </svg>`).firstChild;\n    titlediv.append(titlesvg);\n\n    let detailsdiv = document.createElement('div');\n    detailsdiv.classList.add('upcoming-details');\n    let detailstitle = document.createElement('h5');\n    detailstitle.innerText = `${element.subject} assessment`;\n    let subject = document.createElement('p');\n    subject.innerText = element.title;\n    subject.classList.add('upcoming-assessment-title');\n    subject.onclick = function () {\n      document.querySelector('#menu ul').classList.add('noscroll'); \n      location.href = `../#?page=/assessments/${element.programmeID}:${element.metaclassID}&item=${element.id}`;\n    };\n    detailsdiv.append(detailstitle);\n    detailsdiv.append(subject);\n\n    item.append(titlediv);\n    item.append(detailsdiv);\n    assessmentContainer.append(item);\n\n    fetch(`${location.origin}/seqta/student/assessment/submissions/get`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8',\n      },\n      body: JSON.stringify({\n        assessment: element.id,\n        metaclass: element.metaclassID,\n        student: 69,\n      }),\n    })\n      .then((result) => result.json())\n      .then((response) => {\n        if (response.payload.length > 0) {\n          const assessment = document.querySelector(`#assessment${element.id}`);\n\n          // ticksvg = stringToHTML(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"var(--item-colour)\" viewBox=\"0 0 24 24\"><path d=\"M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z\"/></svg>`).firstChild\n          // ticksvg.classList.add('upcoming-tick');\n          // assessment.append(ticksvg);\n          let submittedtext = document.createElement('div');\n          submittedtext.classList.add('upcoming-submittedtext');\n          submittedtext.innerText = 'Submitted';\n          assessment.append(submittedtext);\n        }\n      });\n  }\n\n  container.append(assessmentContainer);\n\n  return container;\n}\n\nfunction CheckSpecialDay(date1, date2) {\n  if (\n    date1.getFullYear() === date2.getFullYear() &&\n    date1.getMonth() === date2.getMonth() &&\n    date1.getDate() - 1 === date2.getDate()\n  ) {\n    return 'Yesterday';\n  }\n  if (\n    date1.getFullYear() === date2.getFullYear() &&\n    date1.getMonth() === date2.getMonth() &&\n    date1.getDate() === date2.getDate()\n  ) {\n    return 'Today';\n  }\n  if (\n    date1.getFullYear() === date2.getFullYear() &&\n    date1.getMonth() === date2.getMonth() &&\n    date1.getDate() + 1 === date2.getDate()\n  ) {\n    return 'Tomorrow';\n  }\n}\n\nfunction CreateSubjectFilter(subjectcode, itemcolour, checked) {\n  let label = CreateElement('label', 'upcoming-checkbox-container');\n  label.innerText = subjectcode;\n  let input = CreateElement('input');\n  input.type = 'checkbox';\n  input.checked = checked;\n  input.id = `filter-${subjectcode}`;\n  label.style = itemcolour;\n  let span = CreateElement('span', 'upcoming-checkmark');\n  label.append(input);\n  label.append(span);\n\n  input.addEventListener('change', function (change) {\n    chrome.storage.local.get(null, function (storage) {\n      let filters = storage.subjectfilters;\n      let id = change.target.id.split('-')[1];\n      filters[id] = change.target.checked;\n\n      chrome.storage.local.set({ subjectfilters: filters });\n    });\n  });\n\n  return label;\n}\n\nfunction CreateFilters(subjects) {\n  chrome.storage.local.get(null, function (result) {\n    let filteroptions = result.subjectfilters;\n\n    let filterdiv = document.querySelector('#upcoming-filters');\n    for (let i = 0; i < subjects.length; i++) {\n      const element = subjects[i];\n      // eslint-disable-next-line\n      if (!Object.prototype.hasOwnProperty.call(filteroptions, element.code)) {\n        filteroptions[element.code] = true;\n        chrome.storage.local.set({ subjectfilters: filteroptions });\n      }\n      let elementdiv = CreateSubjectFilter(\n        element.code,\n        element.colour,\n        filteroptions[element.code],\n      );\n\n      filterdiv.append(elementdiv);\n    }\n  });\n}\n\nfunction CreateUpcomingSection(assessments) {\n  let upcomingitemcontainer = document.querySelector('#upcoming-items');\n  let overdueDates = [];\n  let upcomingDates = {};\n\n  // date = '2022/3/20';\n  // var Today = new Date(date);\n\n  var Today = new Date();\n\n  // Removes overdue assessments from the upcoming assessments array and pushes to overdue array\n  for (let i = 0; i < assessments.length; i++) {\n    const element = assessments[i];\n    let assessmentdue = new Date(element.due);\n\n    CheckSpecialDay(Today, assessmentdue);\n    if (assessmentdue < Today) {\n      if (!CheckSpecialDay(Today, assessmentdue)) {\n        overdueDates.push(element);\n        assessments.splice(i, 1);\n        i--;\n      }\n    }\n  }\n\n  var TomorrowDate = new Date();\n  TomorrowDate.setDate(TomorrowDate.getDate() + 1);\n\n  GetLessonColours().then((colours) => {\n    let subjects = colours;\n    for (let i = 0; i < assessments.length; i++) {\n      let subjectname = `timetable.subject.colour.${assessments[i].code}`;\n\n      let subject = subjects.find((element) => element.name === subjectname);\n      if (!subject) {\n        assessments[i].colour = '--item-colour: #8e8e8e;';\n      } else {\n        assessments[i].colour = `--item-colour: ${subject.value};`;\n        GetThresholdOfColor(subject.value); // result (originally) result = GetThresholdOfColor\n      }\n    }\n\n    let activeSubjects = []; // TODO: IDK what is going on here, but it didn't exist\n    for (let i = 0; i < activeSubjects.length; i++) {\n      const element = activeSubjects[i];\n      let subjectname = `timetable.subject.colour.${element.code}`;\n      let colour = colours.find((element) => element.name === subjectname);\n      if (!colour) {\n        element.colour = '--item-colour: #8e8e8e;';\n      } else {\n        element.colour = `--item-colour: ${colour.value};`;\n        let result = GetThresholdOfColor(colour.value);\n        if (result > 300) {\n          element.invert = true;\n        }\n      }\n    }\n\n    CreateFilters(activeSubjects);\n\n    let type;\n    let class_;\n\n    for (let i = 0; i < assessments.length; i++) {\n      const element = assessments[i];\n      if (!upcomingDates[element.due]) {\n        let dateObj = new Object();\n        dateObj.div = CreateElement(\n          // TODO: not sure whats going on here?\n          // eslint-disable-next-line\n          type = \"div\",\n          // eslint-disable-next-line\n          class_ = \"upcoming-date-container\",\n        );\n        dateObj.assessments = [];\n\n        upcomingDates[element.due] = dateObj;\n      }\n      let assessmentDateDiv = upcomingDates[element.due];\n      assessmentDateDiv.assessments.push(element);\n    }\n\n    for (var date in upcomingDates) {\n      let assessmentdue = new Date(upcomingDates[date].assessments[0].due);\n      let specialcase = CheckSpecialDay(Today, assessmentdue);\n      let assessmentDate;\n      let datecase;\n\n      if (specialcase) {\n        assessmentDate = createAssessmentDateDiv(\n          date,\n          upcomingDates[date],\n          // eslint-disable-next-line\n          datecase = specialcase,\n        );\n      } else {\n        assessmentDate = createAssessmentDateDiv(date, upcomingDates[date]);\n      }\n\n      if (specialcase === 'Yesterday') {\n        upcomingitemcontainer.insertBefore(\n          assessmentDate,\n          upcomingitemcontainer.firstChild,\n        );\n      } else {\n        upcomingitemcontainer.append(assessmentDate);\n      }\n\n    }\n    chrome.storage.local.get(null, function (result) {\n      FilterUpcomingAssessments(result.subjectfilters);\n    });\n  });\n}\n\nfunction AddPlaceHolderToParent(parent, numberofassessments) {\n  let textcontainer = CreateElement('div', 'upcoming-blank');\n  let textblank = CreateElement('p', 'upcoming-hiddenassessment');\n  let s = '';\n  if (numberofassessments > 1) {\n    s = 's';\n  }\n  textblank.innerText = `${numberofassessments} hidden assessment${s} due`;\n  textcontainer.append(textblank);\n  textcontainer.setAttribute('data-hidden', true);\n\n  parent.append(textcontainer);\n}\n\nfunction FilterUpcomingAssessments(subjectoptions) {\n  for (var item in subjectoptions) {\n    let subjectdivs = document.querySelectorAll(`[data-subject=\"${item}\"]`);\n\n    for (let i = 0; i < subjectdivs.length; i++) {\n      const element = subjectdivs[i];\n\n      if (!subjectoptions[item]) {\n        element.classList.add('hidden');\n      }\n      if (subjectoptions[item]) {\n        element.classList.remove('hidden');\n      }\n      element.parentNode.classList.remove('hidden');\n\n      let children = element.parentNode.parentNode.children;\n      for (let i = 0; i < children.length; i++) {\n        const element = children[i];\n        if (element.hasAttribute('data-hidden')) {\n          element.remove();\n        }\n      }\n\n      if (\n        element.parentNode.children.length ==\n        element.parentNode.querySelectorAll('.hidden').length\n      ) {\n        if (element.parentNode.querySelectorAll('.hidden').length > 0) {\n          if (!element.parentNode.parentNode.hasAttribute('data-day')) {\n            element.parentNode.parentNode.classList.add('hidden');\n          } else {\n            AddPlaceHolderToParent(\n              element.parentNode.parentNode,\n              element.parentNode.querySelectorAll('.hidden').length,\n            );\n          }\n        }\n      } else {\n        element.parentNode.parentNode.classList.remove('hidden');\n      }\n    }\n  }\n}\n\nchrome.storage.onChanged.addListener(function (changes) {\n  if (changes.subjectfilters) {\n    FilterUpcomingAssessments(changes.subjectfilters.newValue);\n  }\n});\n\nasync function GetLessonColours() {\n  let func = fetch(`${location.origin}/seqta/student/load/prefs?`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json; charset=utf-8',\n    },\n    body: JSON.stringify({ request: 'userPrefs', asArray: true, user: 69 }),\n  });\n  return func\n    .then((result) => result.json())\n    .then((response) => response.payload);\n}\n\nexport function CreateCustomShortcutDiv(element) {\n  // Creates the stucture and element information for each seperate shortcut\n  var shortcut = document.createElement('a');\n  shortcut.setAttribute('href', element.url);\n  shortcut.setAttribute('target', '_blank');\n  var shortcutdiv = document.createElement('div');\n  shortcutdiv.classList.add('shortcut');\n  shortcutdiv.classList.add('customshortcut');\n\n  let image = stringToHTML(\n    `\n    <svg style=\"width:39px;height:39px\" viewBox=\"0 0 40 40\" class=\"shortcuticondiv\">\n      <text \n        text-anchor=\"middle\" \n        x=\"50%\" \n        y=\"50%\" \n        dy=\".35em\" \n        fill=\"var(--text-primary)\" \n        font-weight=\"bold\" \n        font-size=\"32\" \n        dominant-baseline=\"middle\">\n        ${element.icon}\n      </text>\n    </svg>\n    `,\n  ).firstChild;\n  image.classList.add('shortcuticondiv');\n  var text = document.createElement('p');\n  text.textContent = element.name;\n  shortcutdiv.append(image);\n  shortcutdiv.append(text);\n  shortcut.append(shortcutdiv);\n\n  document.getElementById('shortcuts').append(shortcut);\n}\n\nexport function RemoveShortcutDiv(elements) {\n  elements.forEach((element) => {\n    const shortcuts = document.querySelectorAll('.shortcut');\n    shortcuts.forEach((shortcut) => {\n      const anchorElement = shortcut.parentElement; // the <a> element is the parent\n      const textElement = shortcut.querySelector('p'); // <p> is a direct child of .shortcut\n      const title = textElement ? textElement.textContent : '';\n\n      let shouldRemove = title === element.name;\n\n      // Check href only if element.url exists\n      if (element.url) {\n        shouldRemove = shouldRemove && (anchorElement.getAttribute('href') === element.url);\n      }\n\n      if (shouldRemove) {\n        anchorElement.remove();\n      }\n    });\n  });\n}\n\nfunction AddCustomShortcutsToPage() {\n  chrome.storage.local.get(['customshortcuts'], function (result) {\n    var customshortcuts = Object.values(result)[0];\n    if (customshortcuts.length > 0) {\n      document.getElementsByClassName('shortcut-container')[0].style.display =\n        'block';\n      for (let i = 0; i < customshortcuts.length; i++) {\n        const element = customshortcuts[i];\n        CreateCustomShortcutDiv(element);\n      }\n    }\n  });\n}\n\nfunction SendHomePage() {\n  setTimeout(function () {\n    // Sends the html data for the home page\n    console.log('[BetterSEQTA] Started Loading Home Page');\n    document.title = 'Home ― SEQTA Learn';\n    var element = document.querySelector('[data-key=home]');\n\n    // Apply the active class to indicate clicked on home button\n    element.classList.add('active');\n\n    // Remove all current elements in the main div to add new elements\n    var main = document.getElementById('main');\n    main.innerHTML = '';\n\n    const titlediv = document.getElementById('title').firstChild;\n    titlediv.innerText = 'Home';\n    document.querySelector('link[rel*=\"icon\"]').href =\n      chrome.runtime.getURL('icons/icon-48.png');\n\n    currentSelectedDate = new Date();\n\n    // Creates the root of the home page added to the main div\n    var html = stringToHTML('<div class=\"home-root\"><div class=\"home-container\" id=\"home-container\"></div></div>');\n    \n    // Appends the html file to main div\n    // Note : firstChild of html is done due to needing to grab the body from the stringToHTML function\n    main.append(html.firstChild);\n\n    // Gets the current date\n    const date = new Date();\n\n    // Formats the current date used send a request for timetable and notices later\n    var TodayFormatted =\n      date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n\n    // Replaces actual date with a selected date. Used for testing.\n    // TodayFormatted = \"2020-08-31\";\n\n    // Creates the shortcut container into the home container\n    var ShortcutStr = '<div class=\"shortcut-container border\"><div class=\"shortcuts border\" id=\"shortcuts\"></div></div>';\n    var Shortcut = stringToHTML(ShortcutStr);\n    // Appends the shortcut container into the home container\n    document.getElementById('home-container').append(Shortcut.firstChild);\n\n    // Creates the container div for the timetable portion of the home page\n    var TimetableStr = '<div class=\"timetable-container border\"><div class=\"home-subtitle\"><h2 id=\"home-lesson-subtitle\">Today\\'s Lessons</h2><div class=\"timetable-arrows\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" style=\"transform: scale(-1,1)\" id=\"home-timetable-back\"><g style=\"fill: currentcolor;\"><path d=\"M8.578 16.359l4.594-4.594-4.594-4.594 1.406-1.406 6 6-6 6z\"></path></g></svg><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" id=\"home-timetable-forward\"><g style=\"fill: currentcolor;\"><path d=\"M8.578 16.359l4.594-4.594-4.594-4.594 1.406-1.406 6 6-6 6z\"></path></g></svg></div></div><div class=\"day-container\" id=\"day-container\"></div></div>';\n    var Timetable = stringToHTML(TimetableStr);\n    // Appends the timetable container into the home container\n    document.getElementById('home-container').append(Timetable.firstChild);\n\n    var timetablearrowback = document.getElementById('home-timetable-back');\n    var timetablearrowforward = document.getElementById(\n      'home-timetable-forward',\n    );\n\n    function SetTimetableSubtitle() {\n      var homelessonsubtitle = document.getElementById('home-lesson-subtitle');\n      const date = new Date();\n      if (\n        date.getYear() == currentSelectedDate.getYear() &&\n        date.getMonth() == currentSelectedDate.getMonth()\n      ) {\n        if (date.getDate() == currentSelectedDate.getDate()) {\n          // Change text to Today's Lessons\n          homelessonsubtitle.innerText = 'Today\\'s Lessons';\n        } else if (date.getDate() - 1 == currentSelectedDate.getDate()) {\n          // Change text to Yesterday's Lessons\n          homelessonsubtitle.innerText = 'Yesterday\\'s Lessons';\n        } else if (date.getDate() + 1 == currentSelectedDate.getDate()) {\n          // Change text to Tomorrow's Lessons\n          homelessonsubtitle.innerText = 'Tomorrow\\'s Lessons';\n        } else {\n          // Change text to date of the day\n          homelessonsubtitle.innerText = `${currentSelectedDate.toLocaleString(\n            'en-us',\n            { weekday: 'short' },\n          )} ${currentSelectedDate.toLocaleDateString('en-au')}`;\n        }\n      } else {\n        // Change text to date of the day\n        homelessonsubtitle.innerText = `${currentSelectedDate.toLocaleString(\n          'en-us',\n          { weekday: 'short' },\n        )} ${currentSelectedDate.toLocaleDateString('en-au')}`;\n      }\n    }\n\n    function changeTimetable(value) {\n      currentSelectedDate.setDate(currentSelectedDate.getDate() + value);\n      let FormattedDate =\n        currentSelectedDate.getFullYear() +\n        '-' +\n        (currentSelectedDate.getMonth() + 1) +\n        '-' +\n        currentSelectedDate.getDate();\n      callHomeTimetable(FormattedDate, true);\n      SetTimetableSubtitle();\n    }\n\n    timetablearrowback.addEventListener('click', function () {\n      changeTimetable(-1);\n    });\n    timetablearrowforward.addEventListener('click', function () {\n      changeTimetable(1);\n    });\n\n    // Adds the shortcuts to the shortcut container\n    chrome.storage.local.get(['shortcuts'], function (result) {\n      const shortcuts = Object.values(result)[0];\n      addShortcuts(shortcuts);\n    });\n\n    // Creates the upcoming container and appends to the home container\n    var upcomingcontainer = document.createElement('div');\n    upcomingcontainer.classList.add('upcoming-container');\n    upcomingcontainer.classList.add('border');\n\n    let upcomingtitlediv = CreateElement('div', 'upcoming-title');\n    let upcomingtitle = document.createElement('h2');\n    upcomingtitle.classList.add('home-subtitle');\n    upcomingtitle.innerText = 'Upcoming Assessments';\n    upcomingtitlediv.append(upcomingtitle);\n\n    let upcomingfilterdiv = CreateElement(\n      'div',\n      'upcoming-filters',\n      'upcoming-filters',\n    );\n    upcomingtitlediv.append(upcomingfilterdiv);\n\n    upcomingcontainer.append(upcomingtitlediv);\n\n    let upcomingitems = document.createElement('div');\n    upcomingitems.id = 'upcoming-items';\n    upcomingitems.classList.add('upcoming-items');\n\n    upcomingcontainer.append(upcomingitems);\n\n    document.getElementById('home-container').append(upcomingcontainer);\n\n    // Creates the notices container into the home container\n    const NoticesStr = String.raw`\n      <div class=\"notices-container border\">\n        <div style=\"display: flex; justify-content: space-between\">\n          <h2 class=\"home-subtitle\">Notices</h2>\n          <input type=\"date\" value=${TodayFormatted} />\n        </div>\n        <div class=\"notice-container\" id=\"notice-container\"></div>\n      </div>`\n      \n    var Notices = stringToHTML(NoticesStr);\n    // Appends the shortcut container into the home container\n    document.getElementById('home-container').append(Notices.firstChild);\n\n    animate(\n      '.home-container > div',\n      { opacity: [0, 1], y: [10, 0] },\n      {\n        delay: stagger(0.2, { start: 0 }),\n        duration: 0.6,\n        easing: [.22, .03, .26, 1]  \n      }\n    );\n\n    callHomeTimetable(TodayFormatted);\n\n    // Sends similar HTTP Post Request for the notices\n    var xhr2 = new XMLHttpRequest();\n    xhr2.open('POST', `${location.origin}/seqta/student/load/notices?`, true);\n    xhr2.setRequestHeader('Content-Type', 'application/json; charset=utf-8');\n\n    xhr2.onreadystatechange = function () {\n      if (xhr2.readyState === 4) {\n        var NoticesPayload = JSON.parse(xhr2.response);\n        var NoticeContainer = document.getElementById('notice-container');\n        if (NoticesPayload.payload.length == 0) {\n          if (!NoticeContainer.innerText) {\n            // If no notices: display no notices\n            var dummyNotice = document.createElement('div');\n            dummyNotice.textContent = 'No notices for today.';\n            dummyNotice.classList.add('dummynotice');\n            NoticeContainer.append(dummyNotice);\n          }\n        } else {\n          if (!NoticeContainer.innerText) {\n            // For each element in the response json:\n            chrome.storage.local.get(['DarkMode'], function (result) {\n              DarkMode = result.DarkMode;\n              for (let i = 0; i < NoticesPayload.payload.length; i++) {\n                // Create a div, and place information from json response\n                var NewNotice = document.createElement('div');\n                NewNotice.classList.add('notice');\n                var title = stringToHTML(\n                  '<h3 style=\"color:var(--colour)\">' +\n                    NoticesPayload.payload[i].title +\n                    '</h3>',\n                );\n                NewNotice.append(title.firstChild);\n\n                if (NoticesPayload.payload[i].label_title != undefined) {\n                  var label = stringToHTML(\n                    '<h5 style=\"color:var(--colour)\">' +\n                      NoticesPayload.payload[i].label_title +\n                      '</h5>',\n                  );\n                  NewNotice.append(label.firstChild);\n                }\n\n                var staff = stringToHTML(\n                  '<h6 style=\"color:var(--colour)\">' +\n                    NoticesPayload.payload[i].staff +\n                    '</h6>',\n                );\n                NewNotice.append(staff.firstChild);\n                // Converts the string into HTML\n                let styles;\n                var content = stringToHTML(\n                  NoticesPayload.payload[i].contents,\n                  // eslint-disable-next-line\n                  styles = true,\n                );\n                for (let i = 0; i < content.childNodes.length; i++) {\n                  NewNotice.append(content.childNodes[i]);\n                }\n                // Gets the colour for the top section of each notice\n\n                var colour = NoticesPayload.payload[i].colour;\n                if (typeof colour == 'string') {\n                  let rgb = GetThresholdOfColor(colour);\n                  if (rgb < 100 && result.DarkMode) {\n                    colour = undefined;\n                  }\n                }\n\n                var colourbar = document.createElement('div');\n                colourbar.classList.add('colourbar');\n                colourbar.style.background = 'var(--colour)';\n                NewNotice.style = `--colour: ${colour}`;\n                // Appends the colour bar to the new notice\n                NewNotice.append(colourbar);\n                // Appends the new notice into the notice container\n                NoticeContainer.append(NewNotice);\n              }\n            });\n          }\n        }\n      }\n    };\n    // Data sent as the POST request\n    xhr2.send(JSON.stringify({ date: TodayFormatted }));\n\n    // Sends similar HTTP Post Request for the notices\n    chrome.storage.local.get(null, function (result) {\n      if (result.notificationcollector) {\n        enableNotificationCollector();\n      }\n    });\n    let activeClassList;\n    GetUpcomingAssessments().then((assessments) => {\n      GetActiveClasses().then((classes) => {\n        // Gets all subjects for the student\n        for (let i = 0; i < classes.length; i++) {\n          const element = classes[i];\n          // eslint-disable-next-line\n          if (element.hasOwnProperty(\"active\")) { // for some reason eslint gets mad, even though it works?\n            // Finds the active class list with the current subjects\n            activeClassList = classes[i];\n          }\n        }\n        let activeSubjects = activeClassList.subjects;\n\n        let activeSubjectCodes = [];\n        // Gets the code for each of the subjects and puts them in an array\n        let element;\n        for (let i = 0; i < activeSubjects.length; i++) {\n          element = activeSubjects[i];\n          activeSubjectCodes.push(element.code);\n        }\n\n        let CurrentAssessments = [];\n        for (let i = 0; i < assessments.length; i++) {\n          element = assessments[i];\n          if (activeSubjectCodes.includes(element.code)) {\n            CurrentAssessments.push(element);\n          }\n        }\n\n        CurrentAssessments.sort(comparedate);\n\n        CreateUpcomingSection(CurrentAssessments, activeSubjects);\n      });\n    });\n  }, 8);\n}\n\nexport function addShortcuts(shortcuts) {\n  for (let i = 0; i < shortcuts.length; i++) {\n    const currentShortcut = shortcuts[i];\n    \n    if (currentShortcut?.enabled) {\n      const Itemname = (currentShortcut?.name ?? '').replace(/\\s/g, '');\n\n      const linkDetails = ShortcutLinks?.[Itemname];\n      if (linkDetails) {\n        createNewShortcut(\n          linkDetails.link,\n          linkDetails.icon,\n          linkDetails.viewBox,\n          currentShortcut?.name\n        );\n      } else {\n        console.warn(`No link details found for '${Itemname}'`);\n      }\n    }\n  }\n  AddCustomShortcutsToPage();\n}\n\nexport function enableNotificationCollector() {\n  var xhr3 = new XMLHttpRequest();\n  xhr3.open('POST', `${location.origin}/seqta/student/heartbeat?`, true);\n  xhr3.setRequestHeader(\n    'Content-Type',\n    'application/json; charset=utf-8'\n  );\n  xhr3.onreadystatechange = function () {\n    if (xhr3.readyState === 4) {\n      var Notifications = JSON.parse(xhr3.response);\n      var alertdiv = document.getElementsByClassName(\n        'notifications__bubble___1EkSQ'\n      )[0];\n      if (typeof alertdiv == 'undefined') {\n        console.log('[BetterSEQTA] No notifications currently');\n      } else {\n        alertdiv.textContent = Notifications.payload.notifications.length;\n      }\n    }\n  };\n  xhr3.send(\n    JSON.stringify({\n      timestamp: '1970-01-01 00:00:00.0',\n      hash: '#?page=/home',\n    })\n  );\n}\n\nexport function disableNotificationCollector() {\n  var alertdiv = document.getElementsByClassName('notifications__bubble___1EkSQ')[0];\n  if (typeof alertdiv != 'undefined') {\n    var currentNumber = parseInt(alertdiv.textContent);\n    if (currentNumber < 9) {\n      alertdiv.textContent = currentNumber;\n    } else {\n      alertdiv.textContent = '9+';\n    }\n  }\n}\n\nfunction createNewShortcut(link, icon, viewBox, title) {\n  // Creates the stucture and element information for each seperate shortcut\n  let shortcut = document.createElement('a');\n  shortcut.setAttribute('href', link);\n  shortcut.setAttribute('target', '_blank');\n  let shortcutdiv = document.createElement('div');\n  shortcutdiv.classList.add('shortcut');\n\n  let image = stringToHTML(\n    `<svg style=\"width:39px;height:39px\" viewBox=\"${viewBox}\"><path fill=\"currentColor\" d=\"${icon}\" /></svg>`,\n  ).firstChild;\n  image.classList.add('shortcuticondiv');\n  let text = document.createElement('p');\n  text.textContent = title;\n  shortcutdiv.append(image);\n  shortcutdiv.append(text);\n  shortcut.append(shortcutdiv);\n\n  document.getElementById('shortcuts').appendChild(shortcut);\n}\n\nfunction SendNewsPage() {\n  setTimeout(function () {\n    // Sends the html data for the home page\n    console.log('[BetterSEQTA] Started Loading News Page');\n    document.title = 'News ― SEQTA Learn';\n    var element = document.querySelector('[data-key=news]');\n\n    // Apply the active class to indicate clicked on home button\n    element.classList.add('active');\n\n    // Remove all current elements in the main div to add new elements\n    var main = document.getElementById('main');\n    main.innerHTML = '';\n\n    // Creates the root of the home page added to the main div\n    var htmlStr = '<div class=\"home-root\"><div class=\"home-container\" id=\"news-container\"><h1 class=\"border\">Latest Headlines - ABC News</h1></div></div>';\n\n    var html = stringToHTML(htmlStr);\n    // Appends the html file to main div\n    // Note : firstChild of html is done due to needing to grab the body from the stringToHTML function\n    main.append(html.firstChild);\n\n    const titlediv = document.getElementById('title').firstChild;\n    titlediv.innerText = 'News';\n    AppendLoadingSymbol('newsloading', '#news-container');\n\n    chrome.runtime.sendMessage({ type: 'sendNews' }, function (response) {\n      let newsarticles = response.news.articles;\n      var newscontainer = document.querySelector('#news-container');\n      document.getElementById('newsloading').remove();\n      for (let i = 0; i < newsarticles.length; i++) {\n        let newsarticle = document.createElement('a');\n        newsarticle.classList.add('NewsArticle');\n        newsarticle.href = newsarticles[i].url;\n        newsarticle.target = '_blank';\n\n        let articleimage = document.createElement('div');\n        articleimage.classList.add('articleimage');\n\n        if (newsarticles[i].urlToImage == 'null') {\n          articleimage.style.backgroundImage = `url(${chrome.runtime.getURL(\n            'icons/betterseqta-light-outline.png',\n          )})`;\n          articleimage.style.width = '20%';\n          articleimage.style.margin = '0 7.5%';\n        } else {\n          articleimage.style.backgroundImage = `url(${newsarticles[i].urlToImage})`;\n        }\n\n        let articletext = document.createElement('div');\n        articletext.classList.add('ArticleText');\n        let title = document.createElement('a');\n        title.innerText = newsarticles[i].title;\n        title.href = newsarticles[i].url;\n        title.target = '_blank';\n\n        let description = document.createElement('p');\n        description.innerHTML = newsarticles[i].description;\n\n        articletext.append(title);\n        articletext.append(description);\n\n        newsarticle.append(articleimage);\n        newsarticle.append(articletext);\n        newscontainer.append(newsarticle);\n      }\n    });\n  }, 8);\n}\n\nasync function CheckForMenuList() {\n  if (!MenuItemMutation) {\n    try {\n      if (document.getElementById('menu').firstChild) {\n        ObserveMenuItemPosition();\n        MenuItemMutation = true;\n      }\n    } catch (error) {\n      return;\n    }\n  }\n}\n\nfunction LoadInit() {\n  console.log('[BetterSEQTA] Started Init');\n  chrome.storage.local.get(null, function (result) {\n    if (result.onoff) {\n      SendHomePage();\n    }\n  });\n}\n","/*global chrome*/\nimport stringToHTML from '../utils/stringToHTML.js';\n\nconst loadingSpinner = `\n    <svg height=\"120\" width=\"120\" viewBox=\"0 0 400 400\" class=\"logo svg\"><path xmlns=\"http://www.w3.org/2000/svg\" id=\"path0\" style=\"fill:currentColor; stroke:none;\" d=\"M186.505 87.037 C 182.415 87.344,173.998 88.440,173.252 88.762 C 172.985 88.877,172.274 89.020,171.672 89.079 C 170.442 89.200,168.636 89.622,167.903 89.959 C 167.635 90.082,167.033 90.234,166.565 90.296 C 165.612 90.422,163.779 90.882,163.040 91.179 C 162.772 91.287,162.061 91.507,161.459 91.668 C 160.857 91.829,160.036 92.098,159.635 92.265 C 159.234 92.432,158.249 92.769,157.447 93.014 C 156.644 93.259,155.884 93.550,155.757 93.660 C 155.630 93.770,155.327 93.860,155.085 93.860 C 154.842 93.860,154.454 93.965,154.222 94.093 C 153.400 94.545,150.479 95.805,150.253 95.805 C 150.016 95.805,149.771 95.915,148.328 96.665 C 147.860 96.908,147.313 97.182,147.112 97.273 C 146.912 97.364,146.365 97.637,145.897 97.881 C 145.429 98.124,144.881 98.397,144.681 98.488 C 144.480 98.579,143.933 98.853,143.465 99.096 C 142.997 99.340,142.395 99.646,142.128 99.777 C 141.860 99.908,141.477 100.108,141.277 100.222 C 141.076 100.336,140.748 100.499,140.547 100.585 C 140.347 100.670,139.854 100.978,139.453 101.269 C 139.052 101.560,138.213 102.041,137.590 102.338 C 136.967 102.636,136.396 103.039,136.321 103.233 C 136.247 103.428,136.030 103.587,135.841 103.587 C 135.550 103.587,132.653 105.358,132.280 105.764 C 132.213 105.837,131.983 106.006,131.768 106.140 C 130.923 106.668,127.533 109.285,127.457 109.470 C 127.412 109.577,127.268 109.666,127.135 109.666 C 126.540 109.666,121.820 113.892,117.087 118.663 C 112.078 123.712,111.261 124.586,110.692 125.504 C 110.412 125.954,109.794 126.699,109.317 127.160 C 108.840 127.621,108.450 128.132,108.450 128.295 C 108.450 128.458,108.365 128.628,108.262 128.673 C 107.951 128.807,105.015 132.816,104.785 133.420 C 104.667 133.729,104.457 133.982,104.317 133.982 C 104.177 133.982,103.932 134.283,103.773 134.650 C 103.614 135.018,103.234 135.628,102.927 136.006 C 102.621 136.385,102.371 136.812,102.371 136.956 C 102.371 137.100,102.086 137.592,101.737 138.049 C 101.389 138.506,100.664 139.720,100.128 140.747 C 99.591 141.774,98.966 142.888,98.738 143.222 C 98.356 143.783,96.170 148.220,95.444 149.909 C 95.271 150.310,94.844 151.251,94.495 152.000 C 94.146 152.749,93.860 153.542,93.860 153.763 C 93.860 153.984,93.764 154.164,93.645 154.164 C 93.527 154.164,93.374 154.410,93.305 154.711 C 93.161 155.340,92.710 156.616,92.240 157.727 C 92.061 158.148,91.915 158.661,91.915 158.867 C 91.915 159.073,91.805 159.309,91.672 159.392 C 91.538 159.475,91.429 159.797,91.429 160.108 C 91.429 160.419,91.265 160.987,91.065 161.370 C 90.866 161.753,90.701 162.252,90.701 162.478 C 90.700 162.704,90.590 162.957,90.456 163.040 C 90.322 163.122,90.213 163.493,90.213 163.864 C 90.213 164.235,90.138 164.614,90.046 164.706 C 89.824 164.927,89.029 167.996,89.011 168.696 C 89.003 168.999,88.893 169.437,88.765 169.669 C 88.508 170.137,88.048 172.415,87.871 174.103 C 87.808 174.705,87.662 175.416,87.548 175.684 C 87.266 176.343,86.617 181.044,86.457 183.587 C 86.385 184.723,86.222 186.529,86.094 187.599 C 85.788 190.163,85.798 198.120,86.112 201.337 C 86.249 202.742,86.453 205.040,86.565 206.444 C 86.838 209.853,87.280 212.835,87.557 213.119 C 87.680 213.246,87.781 213.924,87.781 214.627 C 87.781 215.329,87.883 216.156,88.007 216.463 C 88.131 216.770,88.415 217.897,88.639 218.967 C 89.146 221.396,89.699 223.457,89.990 224.009 C 90.112 224.241,90.213 224.584,90.213 224.771 C 90.213 225.098,90.801 227.195,91.176 228.207 C 91.698 229.617,91.977 230.450,92.089 230.942 C 92.158 231.243,92.311 231.489,92.430 231.489 C 92.548 231.489,92.648 231.681,92.652 231.915 C 92.663 232.514,93.402 234.579,94.046 235.813 C 94.345 236.385,94.590 236.997,94.590 237.173 C 94.590 237.553,99.750 247.882,100.233 248.468 C 100.417 248.692,100.726 249.204,100.919 249.605 C 101.375 250.552,103.155 253.229,103.398 253.333 C 103.502 253.378,103.587 253.532,103.587 253.675 C 103.587 253.819,103.860 254.295,104.195 254.733 C 104.529 255.171,104.802 255.620,104.802 255.731 C 104.802 255.842,105.076 256.227,105.410 256.588 C 105.745 256.948,106.018 257.310,106.018 257.393 C 106.018 257.475,106.443 258.054,106.961 258.680 C 107.480 259.306,107.945 259.938,107.995 260.085 C 108.100 260.395,109.505 262.079,112.158 265.073 C 113.195 266.243,114.043 267.295,114.043 267.411 C 114.043 267.745,120.539 273.957,123.266 276.231 C 124.629 277.368,126.093 278.604,126.519 278.979 C 126.946 279.354,127.842 280.020,128.511 280.459 C 129.179 280.898,129.877 281.439,130.060 281.662 C 130.244 281.885,130.495 282.067,130.618 282.067 C 130.741 282.067,131.137 282.340,131.497 282.675 C 131.858 283.009,132.244 283.283,132.354 283.283 C 132.465 283.283,132.914 283.556,133.352 283.891 C 133.791 284.225,134.226 284.498,134.319 284.498 C 134.413 284.498,134.784 284.772,135.145 285.106 C 135.505 285.441,135.930 285.714,136.088 285.714 C 136.247 285.714,136.685 285.967,137.063 286.275 C 137.441 286.584,138.407 287.157,139.210 287.549 C 140.012 287.942,140.731 288.348,140.807 288.452 C 140.956 288.655,143.088 289.799,145.653 291.053 C 146.523 291.477,147.753 292.091,148.387 292.417 C 149.022 292.743,149.689 293.009,149.871 293.009 C 150.052 293.009,150.716 293.283,151.344 293.617 C 151.973 293.951,152.637 294.225,152.820 294.225 C 153.002 294.225,153.696 294.498,154.362 294.833 C 155.028 295.167,155.775 295.444,156.023 295.448 C 156.271 295.453,156.687 295.617,156.946 295.813 C 157.206 296.010,157.664 296.170,157.965 296.170 C 158.266 296.170,158.580 296.280,158.663 296.413 C 158.745 296.547,159.071 296.657,159.387 296.657 C 159.702 296.657,160.270 296.812,160.649 297.003 C 161.028 297.193,161.830 297.478,162.432 297.635 C 163.033 297.791,163.701 298.009,163.916 298.119 C 164.130 298.229,164.815 298.395,165.438 298.488 C 166.062 298.581,166.631 298.755,166.704 298.873 C 166.777 298.991,167.247 299.088,167.747 299.088 C 168.247 299.088,168.760 299.188,168.888 299.310 C 169.134 299.547,171.496 300.017,173.495 300.226 C 174.164 300.297,174.824 300.446,174.962 300.558 C 175.276 300.813,179.239 301.297,182.614 301.493 C 184.018 301.575,185.314 301.736,185.493 301.851 C 185.918 302.126,319.779 302.047,320.112 301.772 C 320.251 301.657,320.693 301.526,321.094 301.480 C 322.760 301.292,322.787 301.067,322.873 286.565 C 322.964 271.258,322.943 270.923,321.795 269.775 L 320.956 268.936 296.233 268.936 L 271.510 268.936 272.533 267.894 C 273.096 267.320,273.556 266.764,273.556 266.659 C 273.556 266.553,273.967 266.041,274.468 265.521 C 276.001 263.931,276.569 263.271,277.490 262.006 C 277.977 261.337,278.659 260.525,279.005 260.201 C 279.352 259.877,279.635 259.516,279.635 259.400 C 279.635 259.284,279.743 259.057,279.874 258.896 C 280.892 257.645,282.796 254.907,282.796 254.694 C 282.796 254.550,283.070 254.174,283.404 253.860 C 283.739 253.546,284.012 253.157,284.012 252.997 C 284.012 252.836,284.174 252.570,284.371 252.406 C 284.568 252.242,285.001 251.535,285.332 250.835 C 285.663 250.135,286.092 249.431,286.284 249.272 C 286.701 248.925,292.175 237.982,292.411 237.021 C 292.502 236.653,292.673 236.353,292.792 236.353 C 292.912 236.353,293.009 236.163,293.009 235.931 C 293.009 235.698,293.268 234.960,293.584 234.289 C 293.901 233.619,294.348 232.468,294.578 231.733 C 294.808 230.997,295.081 230.176,295.185 229.909 C 295.289 229.641,295.563 228.821,295.793 228.085 C 296.023 227.350,296.300 226.529,296.408 226.261 C 296.792 225.308,297.386 223.159,297.386 222.722 C 297.386 222.478,297.495 222.210,297.629 222.128 C 297.763 222.045,297.872 221.614,297.872 221.170 C 297.872 220.727,298.036 219.971,298.237 219.490 C 298.438 219.010,298.602 218.183,298.602 217.651 C 298.602 217.120,298.711 216.618,298.845 216.535 C 298.979 216.452,299.088 215.892,299.088 215.289 C 299.088 214.686,299.214 213.957,299.369 213.668 C 299.640 213.162,299.843 211.804,300.306 207.416 C 300.425 206.280,300.632 204.584,300.766 203.647 C 301.081 201.438,301.071 187.027,300.754 185.289 C 300.619 184.553,300.424 182.967,300.320 181.763 C 300.025 178.368,299.580 175.255,299.349 174.970 C 299.233 174.828,299.081 174.164,299.011 173.495 C 298.801 171.496,298.331 169.134,298.094 168.888 C 297.972 168.760,297.872 168.419,297.872 168.128 C 297.872 167.838,297.613 166.793,297.296 165.806 C 296.980 164.819,296.530 163.218,296.297 162.247 C 296.064 161.276,295.776 160.422,295.657 160.348 C 295.538 160.275,295.441 159.998,295.441 159.734 C 295.441 159.470,295.167 158.715,294.833 158.055 C 294.498 157.395,294.225 156.639,294.225 156.375 C 294.225 156.111,294.116 155.827,293.982 155.745 C 293.848 155.662,293.739 155.426,293.739 155.220 C 293.739 154.869,293.251 153.605,292.746 152.648 C 292.623 152.415,292.523 152.095,292.523 151.936 C 292.523 151.552,288.208 142.818,287.558 141.888 C 287.016 141.111,286.718 140.587,285.811 138.817 C 285.494 138.200,285.070 137.557,284.867 137.389 C 284.664 137.221,284.498 136.970,284.498 136.832 C 284.498 136.694,284.225 136.222,283.891 135.784 C 283.556 135.346,283.283 134.896,283.283 134.786 C 283.283 134.675,283.009 134.290,282.675 133.929 C 282.340 133.569,282.067 133.173,282.067 133.050 C 282.067 132.926,281.884 132.675,281.661 132.492 C 281.437 132.308,280.949 131.679,280.576 131.092 C 280.203 130.506,279.565 129.661,279.159 129.214 C 278.752 128.768,278.419 128.332,278.419 128.246 C 278.419 128.160,277.872 127.459,277.204 126.687 C 276.535 125.915,275.988 125.162,275.988 125.013 C 275.988 124.639,262.904 111.611,262.528 111.611 C 262.361 111.611,261.628 111.087,260.900 110.448 C 258.576 108.407,255.317 106.018,254.859 106.018 C 254.733 106.018,254.594 105.933,254.549 105.830 C 254.432 105.557,251.480 103.587,251.188 103.587 C 251.053 103.587,250.942 103.487,250.942 103.365 C 250.942 103.243,250.473 102.917,249.900 102.639 C 249.327 102.362,248.505 101.874,248.073 101.556 C 247.642 101.238,244.911 99.807,242.003 98.377 C 239.096 96.947,236.408 95.619,236.029 95.426 C 235.650 95.234,235.189 95.076,235.004 95.076 C 234.819 95.076,234.178 94.802,233.579 94.468 C 232.980 94.134,232.287 93.860,232.038 93.860 C 231.790 93.860,231.483 93.773,231.356 93.667 C 231.229 93.561,230.468 93.274,229.666 93.031 C 228.863 92.787,227.988 92.500,227.720 92.394 C 227.453 92.287,226.632 92.011,225.897 91.781 C 225.161 91.551,224.340 91.274,224.073 91.166 C 223.551 90.956,221.617 90.497,220.426 90.300 C 220.024 90.234,219.477 90.084,219.210 89.967 C 218.504 89.659,216.463 89.208,215.198 89.081 C 214.596 89.021,213.884 88.875,213.617 88.757 C 212.989 88.480,210.310 88.051,207.538 87.784 C 206.334 87.667,204.474 87.457,203.404 87.315 C 200.840 86.976,189.743 86.793,186.505 87.037 M203.283 121.454 C 204.152 121.535,205.082 121.695,205.350 121.810 C 205.951 122.069,209.848 122.796,210.633 122.796 C 210.950 122.796,211.314 122.901,211.442 123.029 C 211.570 123.157,212.550 123.477,213.619 123.741 C 215.627 124.236,216.955 124.652,217.687 125.017 C 217.919 125.133,218.316 125.228,218.569 125.228 C 218.822 125.228,219.165 125.392,219.331 125.593 C 219.498 125.793,219.782 125.957,219.962 125.957 C 220.142 125.957,220.888 126.231,221.619 126.565 C 222.350 126.900,223.036 127.173,223.145 127.173 C 223.475 127.173,229.398 130.188,229.777 130.549 C 229.971 130.734,230.409 131.009,230.749 131.159 C 231.715 131.584,236.907 135.082,237.424 135.656 C 237.678 135.939,237.990 136.170,238.116 136.170 C 239.130 136.170,251.915 148.904,251.915 149.914 C 251.915 150.010,252.216 150.449,252.584 150.890 C 253.713 152.245,254.881 153.896,255.381 154.843 C 255.642 155.339,256.038 155.964,256.259 156.231 C 256.481 156.498,256.875 157.155,257.135 157.690 C 257.396 158.225,257.832 158.990,258.105 159.391 C 258.834 160.459,260.426 163.663,260.426 164.061 C 260.426 164.250,260.681 164.864,260.992 165.424 C 261.304 165.985,261.753 166.991,261.991 167.660 C 262.228 168.328,262.504 169.094,262.603 169.362 C 263.033 170.514,263.394 171.584,263.506 172.036 C 263.573 172.304,263.716 172.742,263.824 173.009 C 264.194 173.927,264.802 176.105,264.802 176.514 C 264.802 176.740,264.901 177.028,265.021 177.155 C 265.141 177.282,265.296 177.824,265.365 178.359 C 265.434 178.894,265.666 180.152,265.881 181.155 C 266.999 186.375,267.264 203.766,266.260 206.079 C 266.060 206.539,265.767 207.957,265.304 210.699 C 265.191 211.368,264.867 212.595,264.586 213.427 C 264.304 214.259,264.073 215.253,264.073 215.636 C 264.073 216.019,263.995 216.410,263.900 216.506 C 263.631 216.774,262.858 218.916,262.857 219.392 C 262.857 219.626,262.748 219.818,262.614 219.818 C 262.480 219.818,262.371 219.982,262.371 220.184 C 262.371 220.385,262.097 221.117,261.763 221.810 C 261.429 222.503,261.155 223.174,261.155 223.301 C 261.155 223.732,257.357 231.118,256.396 232.553 C 255.871 233.339,255.331 234.162,255.198 234.382 C 255.064 234.602,254.708 235.125,254.407 235.544 C 254.106 235.963,253.860 236.407,253.860 236.530 C 253.860 236.653,253.587 237.011,253.252 237.325 C 252.918 237.639,252.644 238.022,252.644 238.175 C 252.644 238.329,252.179 238.951,251.611 239.558 C 251.043 240.165,250.110 241.261,249.539 241.994 C 248.101 243.838,241.409 250.383,239.635 251.679 C 238.833 252.265,238.067 252.838,237.933 252.952 C 237.126 253.642,233.739 256.107,233.435 256.226 C 233.234 256.305,232.563 256.734,231.943 257.181 C 231.323 257.628,230.653 257.994,230.453 257.994 C 230.253 257.994,229.954 258.158,229.787 258.359 C 229.621 258.559,229.391 258.723,229.276 258.723 C 229.161 258.723,228.469 259.106,227.737 259.574 C 227.005 260.043,226.349 260.426,226.280 260.426 C 226.119 260.426,223.719 261.487,222.124 262.263 C 221.453 262.590,220.753 262.857,220.567 262.857 C 220.382 262.857,219.673 263.114,218.991 263.428 C 218.309 263.742,217.149 264.189,216.413 264.421 C 215.678 264.654,214.857 264.936,214.590 265.050 C 214.322 265.163,213.775 265.303,213.374 265.360 C 212.510 265.484,210.415 266.006,209.726 266.269 C 209.459 266.371,208.091 266.642,206.687 266.870 C 205.283 267.099,203.830 267.379,203.459 267.492 C 201.164 268.196,185.674 267.937,181.641 267.127 C 180.638 266.925,179.325 266.694,178.723 266.613 C 178.122 266.532,177.410 266.380,177.143 266.274 C 176.369 265.970,174.544 265.502,173.617 265.371 C 173.149 265.305,172.421 265.095,172.000 264.905 C 171.578 264.715,171.065 264.559,170.859 264.559 C 170.653 264.559,170.417 264.450,170.334 264.316 C 170.252 264.182,169.921 264.073,169.599 264.073 C 169.277 264.073,168.524 263.799,167.925 263.465 C 167.326 263.131,166.675 262.857,166.477 262.857 C 166.279 262.857,165.316 262.467,164.335 261.990 C 163.355 261.513,162.225 260.981,161.824 260.808 C 160.175 260.098,159.608 259.810,159.075 259.414 C 158.766 259.184,158.000 258.752,157.372 258.453 C 156.745 258.154,155.922 257.655,155.544 257.344 C 155.166 257.033,154.743 256.778,154.604 256.778 C 154.465 256.778,153.829 256.395,153.191 255.927 C 152.554 255.459,151.944 255.076,151.837 255.076 C 151.730 255.076,151.123 254.638,150.489 254.103 C 149.854 253.568,149.266 253.131,149.182 253.131 C 149.098 253.131,148.544 252.676,147.951 252.120 C 147.357 251.564,146.516 250.896,146.080 250.635 C 145.056 250.023,137.387 242.318,137.384 241.899 C 137.383 241.724,136.840 241.033,136.178 240.365 C 135.516 239.696,134.970 239.026,134.965 238.875 C 134.959 238.724,134.781 238.456,134.568 238.280 C 134.130 237.917,130.091 231.892,130.091 231.602 C 130.091 231.499,129.841 231.075,129.534 230.661 C 129.042 229.996,126.689 225.365,126.187 224.073 C 126.083 223.805,125.726 222.985,125.394 222.249 C 125.063 221.514,124.601 220.310,124.368 219.574 C 124.136 218.839,123.861 218.018,123.756 217.751 C 123.652 217.483,123.380 216.663,123.152 215.927 C 122.924 215.191,122.641 214.400,122.524 214.167 C 122.406 213.935,122.309 213.443,122.309 213.073 C 122.308 212.704,122.144 212.088,121.944 211.705 C 121.744 211.322,121.581 210.644,121.581 210.199 C 121.581 209.754,121.471 209.323,121.337 209.240 C 121.204 209.157,121.094 208.553,121.094 207.897 C 121.094 207.241,120.940 206.235,120.752 205.662 C 120.045 203.509,119.764 190.970,120.321 186.383 C 120.756 182.794,121.125 180.573,121.359 180.125 C 121.481 179.893,121.581 179.325,121.581 178.863 C 121.581 178.401,121.680 177.961,121.803 177.885 C 121.925 177.810,122.100 177.284,122.193 176.716 C 122.482 174.942,123.519 171.354,123.834 171.039 C 123.932 170.941,124.012 170.622,124.012 170.330 C 124.012 170.038,124.286 169.284,124.620 168.656 C 124.954 168.027,125.228 167.364,125.228 167.182 C 125.228 166.823,130.078 157.037,130.355 156.839 C 130.448 156.772,130.759 156.265,131.047 155.713 C 131.334 155.161,131.783 154.515,132.046 154.277 C 132.308 154.040,132.523 153.722,132.523 153.571 C 132.523 153.420,132.735 153.027,132.995 152.697 C 133.998 151.422,135.579 149.323,135.927 148.803 C 136.929 147.306,144.689 139.351,146.353 138.116 C 146.803 137.781,147.346 137.316,147.561 137.082 C 147.775 136.848,148.068 136.657,148.213 136.657 C 148.358 136.657,148.847 136.274,149.301 135.805 C 149.755 135.337,150.241 134.954,150.382 134.954 C 150.523 134.954,150.967 134.683,151.368 134.351 C 152.561 133.365,153.270 132.890,154.066 132.543 C 154.346 132.420,154.729 132.170,154.917 131.987 C 155.105 131.803,155.970 131.286,156.839 130.839 C 157.708 130.391,158.474 129.958,158.541 129.876 C 158.724 129.651,159.533 129.179,160.486 128.740 C 160.954 128.525,161.502 128.251,161.702 128.132 C 162.374 127.734,163.515 127.236,164.742 126.806 C 165.410 126.572,166.061 126.285,166.188 126.169 C 166.316 126.052,166.589 125.957,166.796 125.956 C 167.004 125.956,167.712 125.682,168.369 125.349 C 169.027 125.015,169.793 124.738,170.072 124.734 C 170.350 124.730,170.790 124.566,171.050 124.369 C 171.309 124.173,171.916 124.012,172.399 124.012 C 172.882 124.012,173.381 123.925,173.508 123.819 C 173.916 123.477,176.349 122.825,178.723 122.420 C 179.994 122.203,181.285 121.926,181.592 121.803 C 181.899 121.681,182.720 121.570,183.416 121.556 C 184.112 121.543,184.954 121.442,185.289 121.331 C 185.947 121.114,200.695 121.215,203.283 121.454 \" stroke=\"none\" fill=\"#040404\" fill-rule=\"evenodd\"/></svg>\n    <svg height=\"135\" width=\"135\" viewBox=\"0 0 1000 1000\" class=\"small-circle svg\"><path xmlns=\"http://www.w3.org/2000/svg\" style=\"fill:currentColor; stroke:none;\" d=\"M456 954L455.999 938C455.986 936.008 456.301 933.282 454.972 931.603C453.594 929.862 450.977 930.062 448.999 929.835C443.991 929.258 438.987 928.463 434 927.728C414.788 924.898 395.564 920.733 377 915.025C300.826 891.602 231.835 849.314 178.17 790C106.263 710.526 63.7248 603.522 65.0039 496C65.7806 430.71 81.6532 365.691 110.259 307C130.156 266.177 157.727 228.746 189.039 196C222.33 161.185 262.986 132.26 306 110.753C345.737 90.8846 389.756 75.6209 434 70L434 48C417.656 48.1353 400.764 53.1855 385 57.1265C338.501 68.7513 294.622 88.2739 254 113.576C215.656 137.46 181.298 167.82 151.87 202C33.2034 339.827 7.62905 544.971 91.2585 707C112.853 748.839 140.699 787.699 174 821C210.688 857.688 253.047 888.542 300 910.781C332.493 926.171 365.923 937.713 401 945.65C418.745 949.666 437.768 953.624 456 954z\"/></svg>\n    <svg height=\"180\" width=\"180\" viewBox=\"0 0 1000 1000\" class=\"big-circle svg\"><path xmlns=\"http://www.w3.org/2000/svg\" style=\"fill:currentColor; stroke:none;\" d=\"M454 952L454 887C441.324 886.456 428.346 883.444 416 880.65C389.799 874.722 364.497 866.349 340 855.306C205.92 794.861 116.45 660.408 110.039 514C108.593 480.976 112.302 447.246 119.424 415C144.931 299.518 226.1 198.275 333 147.781C389.157 121.255 450.99 108.496 513 110.015C612.241 112.446 711.495 157.399 779.961 229C839.544 291.312 879.215 372.892 887.831 459C893.323 513.894 887.624 569.466 870.329 622C836.537 724.647 758.42 810.937 660 855.306C635.503 866.349 610.201 874.722 584 880.65C571.383 883.505 557.974 886.732 545 887L545 952C562.916 951.63 581.566 947.595 599 943.65C637.149 935.018 673.043 921.725 708 904.247C753.184 881.655 792.42 850.594 828 815C859.416 783.572 885.414 745.666 905.247 706C933.723 649.048 949.566 588.445 953.911 525C963.014 392.066 906.622 254.399 808 165.17C769.47 130.31 725.8 101.975 678 81.5787C629.733 60.9833 575.64 47.3041 523 46.0146C469.032 44.6927 415.748 49.9443 364 66.0255C223.375 109.726 109.726 223.376 66.0255 364C14.4181 530.066 63.7205 715.347 191 833.911C229.196 869.491 274.051 897.962 322 918.421C362.806 935.833 409.371 950.084 454 952z\"/></svg>\n    <svg height=\"220\" width=\"220\" viewBox=\"0 0 1000 1000\" class=\"outer-circle svg\"><path xmlns=\"http://www.w3.org/2000/svg\" style=\"fill:currentColor; stroke:none;\" d=\"M456 954L456 946C438.715 945.258 420.843 941.462 404 937.65C369.403 929.822 335.739 918.116 304 902.247C255.981 878.237 211.768 846.374 175.09 807C62.5744 686.214 23.1598 509.033 78.6921 353C96.4653 303.062 122.84 256.974 156.424 216C207.709 153.43 278.099 103.658 355 78C372.453 72.1767 389.992 67.0399 408 63.2107C413.31 62.0816 418.647 60.9853 424 60.0811C426.508 59.6575 430.352 59.6852 432.397 57.9869C434.897 55.9098 434 50.8766 434 48C417.656 48.1353 400.764 53.1855 385 57.1265C338.517 68.7473 294.608 88.2827 254 113.576C215.673 137.45 181.285 167.835 151.87 202C33.9725 338.933 8.37009 541.243 89.2485 703C110.949 746.4 139.693 786.693 174 821C210.688 857.688 253.047 888.542 300 910.781C332.484 926.167 365.934 937.716 401 945.65C418.745 949.666 437.768 953.624 456 954z\"/></svg>\n    `;\n\nexport function AppendLoadingSymbol(givenID, position) {\n  let loadingsymbol = stringToHTML(String.raw`\n    <div id=\"${givenID}\">\n    ${loadingSpinner}\n    </div>`).firstChild;\n\n  document.querySelector(position).appendChild(loadingsymbol);\n}\n\nexport default function loading() {\n  let loadinghtml = stringToHTML(\n    String.raw`\n    <div class=\"bkloading\" id=\"loading\" style=\"background-color: var(--theme-secondary, var(--background-secondary)); color: var(--text-primary); width: 100%;overflow: hidden;opacity: 1;transition: 1s;height: 100%;transition: color 1ms linear, opacity 1s ease-in-out;top: 0;position: absolute;left: 0;z-index: 1000000;\">\n    <style>\n      .svg {\n        transform-origin: center;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n      }\n      .logo {\n        transform: translate(-50%, -50%);\n      }\n      .big-circle {\n        margin: -88px;\n        animation-timing-function: ease;\n        animation: spin 3s linear infinite;\n        -moz-animation: spin 3s linear infinite;\n      }\n      .small-circle {\n        margin: -66px;\n        animation-timing-function: ease;\n        animation: spin 3s linear infinite;\n        -moz-animation: spin 3s linear infinite;\n      }\n      .outer-circle {\n        margin: -108px;\n        animation-direction: alternate-reverse;\n        animation: spinback 1s linear infinite;\n        -moz-animation: spinback 1s linear infinite;\n      }\n      @-moz-keyframes spin {\n        100% {\n          -moz-transform: rotate(360deg);\n        }\n      }\n      @-webkit-keyframes spin {\n        100% {\n          -webkit-transform: rotate(360deg);\n        }\n      }\n      @keyframes spin {\n        100% {\n          -webkit-transform: rotate(360deg);\n          transform: rotate(360deg);\n        }\n      }\n      @keyframes spinback {\n        100% {\n          -webkit-transform: rotate(-360deg);\n          transform: rotate(-360deg);\n        }\n      }\n      </style>\n    ${loadingSpinner}\n  <div style=\"position: absolute;bottom: 0;right: 0;padding: 10px;color: #4f4f4f;text-anchor: middle;font-size: 20px;\">v${\n  chrome.runtime.getManifest().version\n}</div></div>`,\n  );\n  var html = document.getElementsByTagName('html')[0];\n  html.append(loadinghtml.firstChild);\n}"],"names":[],"sourceRoot":""}